{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xdE8768cdbDA02fDD82e61be15D6a8292C358d9fb",
    "txHash": "0x314c4ad8d31ccf64427d7a0de18c0248c1b41e1c2ac7d1e0be34e409345e29de"
  },
  "proxies": [
    {
      "address": "0x3409438cA0c0cE6F9c035cB3eDa8Be944aacD6Ff",
      "txHash": "0x6374230bab3d3ca60aa3ea21629f255962e4b74e95b14d90c8695e3877fffcd1",
      "kind": "transparent"
    },
    {
      "address": "0xe6019268cF4136826fAb215f54AdbA61c7d44Ed3",
      "txHash": "0x97221622c545b5663562c965a5252291724c9f7c03cfb651c50b5b5ee16b7634",
      "kind": "transparent"
    },
    {
      "address": "0x10D04501f2926D9d7746F208927cFeFFb3eC8D0B",
      "txHash": "0x628c624c6a945d2a5df16e25e8aef2e3ddf1598291458af8e4c78f8576ecc202",
      "kind": "transparent"
    },
    {
      "address": "0x5Bc940D55a7585C22C9d8682198BfBFBF029FCa5",
      "txHash": "0x93791a3d1a869c9ab6984ea316575e2824143aa97985e1830dbe530a4cc43308",
      "kind": "transparent"
    },
    {
      "address": "0x0A8f642beD0898cCF67F915469E70685623D67Bf",
      "txHash": "0x3ffc3eadefb93ea4fee444130bf6ab620cee9ad20f84fb18a676117bd4f14ec3",
      "kind": "transparent"
    },
    {
      "address": "0xc3487aCe6FB2F41dc1Bc2E63729aDC0EbAD64748",
      "txHash": "0x30a467a34558f35f82490a7db3e024bbc33c63a4482d4e65de1363d544f83ec9",
      "kind": "transparent"
    },
    {
      "address": "0x52392F198203AfcEf043221692D33211A8e625C9",
      "txHash": "0x7168992d3417d02222c2e2b6b3c02fa685beca8c1aff6d9f69241a71487ae065",
      "kind": "transparent"
    },
    {
      "address": "0x1E9225a93fd75382689D7c1ca3402B1b405E9347",
      "txHash": "0x9666cc0b6818e911511067b3cdc3f559051a4e6f47640229bc50acc03c0d4fa8",
      "kind": "transparent"
    },
    {
      "address": "0x4b717A0eD94980CaCF47acdB28266d3A06445787",
      "txHash": "0xa01c3dcf4aaee47898af4681f6e9326de68f81254abf5c509f2795e29044b83e",
      "kind": "transparent"
    },
    {
      "address": "0xA3899B59c34702aCA1Fb988740a63c5406A456Ba",
      "txHash": "0xbf662abf084a79bde52c1d31b1bcde2800e927b24cc77d38e2cb332a1d0691f7",
      "kind": "transparent"
    }
  ],
  "impls": {
    "41aca3408969b546f7b677f523125be48540f0375cdfb992785dc1f3d81ff9b7": {
      "address": "0x96c753BdE04d84Dc840B500276582a0c842619A8",
      "txHash": "0xfefe25374473bfe84c0658fda2dd6eade93ad98c2bde412876ff94b7154cfb09",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "Traits",
            "label": "dwarfs_nft",
            "type": "t_contract(IDwarfs_NFT)6034",
            "src": "..\\project:\\contracts\\Traits.sol:18"
          },
          {
            "contract": "Traits",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Traits.sol:21"
          }
        ],
        "types": {
          "t_contract(IDwarfs_NFT)6034": {
            "label": "contract IDwarfs_NFT"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2196045aed68527478707823dbe20ca01761b8769e46deb64a5149d4fc5e65dd": {
      "address": "0xeAF12130f379B6324b4BeE644C35357e5E60e6Cf",
      "txHash": "0x6a7f47ad322d460be26502d46a8658f182c24592d8c8f1cb2936f7bb03a5fa3d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "GOD",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\GOD.sol:13"
          },
          {
            "contract": "GOD",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\project:\\contracts\\GOD.sol:16"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d7197f9ecb26afad27bf3292e0a04c817632ab33a7147901d0ba9669e9570b42": {
      "address": "0xb486F30bB72AAdeC06a73B1330bdCeC21C9D89e0",
      "txHash": "0xec8588a7498b66054dfdd6a361e69a0cac4f477e2ddd5e13be9b2e3d21c86d81",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Context.sol:12"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Context.sol:13"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Context.sol:17"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Context.sol:20"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_MOBSTERS_CITY",
            "type": "t_array(t_uint16)dyn_storage",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)5969_storage)",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTraithashToken",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)5944",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)5993",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5909",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TRAITS",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "cityId",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_array(t_uint16)dyn_storage",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "totalBosses",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "totalDwarfathers",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "remainMobstersOfCity",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "bossTraits",
            "type": "t_array(t_struct(DwarfTrait)5969_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "dwarfatherTraits",
            "type": "t_array(t_struct(DwarfTrait)5969_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\Context.sol:24"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)5969_storage)": {
            "label": "mapping(uint32 => struct IDwarfs_NFT.DwarfTrait)"
          },
          "t_struct(DwarfTrait)5969_storage": {
            "label": "struct IDwarfs_NFT.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "alphaIndex",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_contract(IClan)5944": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)5993": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5909": {
            "label": "contract GOD"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_struct(DwarfTrait)5969_storage)dyn_storage": {
            "label": "struct IDwarfs_NFT.DwarfTrait[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "eb9a9875a2e6a35dc8f35e66d2730eea3df9fc5a3acb52a151cfc19d013f73c7": {
      "address": "0x393eEd548a3a67FC0B598A0d8BbcCB9f6Efb1273",
      "txHash": "0x4938411dbee1952abdddc00459b355b9559f2b2d884f3a92cb8b47f6d476d98a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "Clan",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Clan.sol:16"
          },
          {
            "contract": "Clan",
            "label": "dwarfs_nft",
            "type": "t_contract(Dwarfs_NFT)5771",
            "src": "..\\project:\\contracts\\Clan.sol:39"
          },
          {
            "contract": "Clan",
            "label": "god",
            "type": "t_contract(GOD)5909",
            "src": "..\\project:\\contracts\\Clan.sol:42"
          },
          {
            "contract": "Clan",
            "label": "mapTokenInfo",
            "type": "t_mapping(t_uint32,t_struct(TokenInfo)2411_storage)",
            "src": "..\\project:\\contracts\\Clan.sol:45"
          },
          {
            "contract": "Clan",
            "label": "mapTokenExisted",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\project:\\contracts\\Clan.sol:47"
          },
          {
            "contract": "Clan",
            "label": "totalNumberOfTokens",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Clan.sol:50"
          },
          {
            "contract": "Clan",
            "label": "mapCityMobsters",
            "type": "t_mapping(t_uint8,t_array(t_uint32)dyn_storage)",
            "src": "..\\project:\\contracts\\Clan.sol:53"
          },
          {
            "contract": "Clan",
            "label": "DAILY_GOD_RATE",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Clan.sol:56"
          },
          {
            "contract": "Clan",
            "label": "TAX_PERCENT",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Clan.sol:59"
          },
          {
            "contract": "Clan",
            "label": "CASINO_VAULT_PERCENT",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Clan.sol:62"
          },
          {
            "contract": "Clan",
            "label": "MAXIMUM_GLOBAL_GOD",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:65"
          },
          {
            "contract": "Clan",
            "label": "INITIAL_GOD_AMOUNT",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:68"
          },
          {
            "contract": "Clan",
            "label": "MIN_INVESTED_AMOUNT",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:71"
          },
          {
            "contract": "Clan",
            "label": "REQUESTED_GOD_CASINO",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:74"
          },
          {
            "contract": "Clan",
            "label": "remainingGodAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:77"
          },
          {
            "contract": "Clan",
            "label": "casinoVault",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:80"
          },
          {
            "contract": "Clan",
            "label": "mobsterProfitPercent",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Clan.sol:83"
          },
          {
            "contract": "Clan",
            "label": "bMerchantGamePlaying",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\Clan.sol:86"
          },
          {
            "contract": "Clan",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Clan.sol:89"
          },
          {
            "contract": "Clan",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\Clan.sol:92"
          }
        ],
        "types": {
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(Dwarfs_NFT)5771": {
            "label": "contract Dwarfs_NFT"
          },
          "t_contract(GOD)5909": {
            "label": "contract GOD"
          },
          "t_mapping(t_uint32,t_struct(TokenInfo)2411_storage)": {
            "label": "mapping(uint32 => struct Clan.TokenInfo)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(TokenInfo)2411_storage": {
            "label": "struct Clan.TokenInfo",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint32"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "availableBalance",
                "type": "t_uint256"
              },
              {
                "label": "currentInvestedAmount",
                "type": "t_uint256"
              },
              {
                "label": "lastInvestedTime",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint8,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(uint8 => uint32[])"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3a5a915b15f8e4ca3a08503d257bbf6727242708ebe647bf634268737680105a": {
      "address": "0x346B9591Dd47f54E8229D1b19834C2D9a3f74fcb",
      "txHash": "0x61fda047c465ad861ed1aa650228a4f93cab846f255990fe9468155c81017c26",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "Traits",
            "label": "bossTraits",
            "type": "t_array(t_struct(DwarfTrait)5574_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Ownable.sol:16"
          },
          {
            "contract": "Traits",
            "label": "dwarfatherTraits",
            "type": "t_array(t_struct(DwarfTrait)5574_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Ownable.sol:19"
          },
          {
            "contract": "Traits",
            "label": "MAX_TRAITS",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Ownable.sol:22"
          },
          {
            "contract": "Traits",
            "label": "dwarfs_nft",
            "type": "t_contract(IDwarfs_NFT)5588",
            "src": "..\\project:\\contracts\\Ownable.sol:22"
          },
          {
            "contract": "Traits",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Ownable.sol:25"
          }
        ],
        "types": {
          "t_array(t_struct(DwarfTrait)5574_storage)dyn_storage": {
            "label": "struct IDwarfs_NFT.DwarfTrait[]"
          },
          "t_struct(DwarfTrait)5574_storage": {
            "label": "struct IDwarfs_NFT.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "alphaIndex",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_contract(IDwarfs_NFT)5588": {
            "label": "contract IDwarfs_NFT"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "9abb8e825d49246bbf602b55c808848bab7c191b7fd49629d6419eddd766e0f2": {
      "address": "0x4fe80b4b12a9Ce8C2606F6e7Dfa0b66614f6D6cb",
      "txHash": "0xca358bfbd57ffba58fdfdd6dac3248c98cba5d19a5251b9d24ac29bd52e8f61a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Context.sol:12"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Context.sol:13"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Context.sol:17"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Context.sol:20"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_MOBSTERS_CITY",
            "type": "t_array(t_uint16)dyn_storage",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)5574_storage)",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTraithashToken",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)5549",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)5621",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5514",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "cityId",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_array(t_uint16)dyn_storage",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "totalBosses",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "totalDwarfathers",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "remainMobstersOfCity",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Context.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\Context.sol:24"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)5574_storage)": {
            "label": "mapping(uint32 => struct IDwarfs_NFT.DwarfTrait)"
          },
          "t_struct(DwarfTrait)5574_storage": {
            "label": "struct IDwarfs_NFT.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "alphaIndex",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_contract(IClan)5549": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)5621": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5514": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
