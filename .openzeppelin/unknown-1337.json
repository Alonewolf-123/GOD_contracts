{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xE7663Cb7FE0F264Fe2D03f4Aee67CB655C88A8aD",
    "txHash": "0xa2624e93bdcf60364633a828520d02949a3fb13634f3176cab5bdd69b367d866"
  },
  "proxies": [
    {
      "address": "0xE63B88D25A1AD86b69ae7E47EfAf0896489D7851",
      "txHash": "0x647202d5cf076c3ea2e4537beb73678c7a853656418bb5d4c725d3b37a2cf6d2",
      "kind": "transparent"
    },
    {
      "address": "0x0Aed6f268456C049a83EB35e3811F0ffbb16C4F4",
      "txHash": "0x64ecba556c6655148ea4671268cb17b586dfec6f6b67e4f3ee6bd51a9bdfdbfc",
      "kind": "transparent"
    },
    {
      "address": "0xDabE92b1f4202017AC761E81691921C444892dA0",
      "txHash": "0xb2a4a6b0b856f37925d46ff70b2a1bc1674fd3449ee7c3da0b30bb8852e4b70f",
      "kind": "transparent"
    },
    {
      "address": "0x9B3526a2e65daC81BEfc00ECB4C482281Fd9058F",
      "txHash": "0x86ee5bcc3e41ee778ee9ec643605235ef152ae4f11464645e0c4415d0faba348",
      "kind": "transparent"
    },
    {
      "address": "0x6BE78d9b1C8BDC22a2883ceE60501773dE79e7B6",
      "txHash": "0xdf3bdc226328772b95e7e3dd11dc44e7a0054cec8d740f2117f2614f9470ed82",
      "kind": "transparent"
    },
    {
      "address": "0xF4C337Ad8814A60D0b69Ec210a35a76A59EBba35",
      "txHash": "0xde226660f4f472fa757aa11e51c7c6e753e9f070bae241231f2518a281af8448",
      "kind": "transparent"
    },
    {
      "address": "0x5D16b4d705DB801da8Bf51CAdeB60f02D960e4Ee",
      "txHash": "0x1439184666edde97f6ba4af45ca7d955cb0a6dd7dd496fc4ce3bd7631805b215",
      "kind": "transparent"
    },
    {
      "address": "0x640e57E01b95e2a279e1CFdD7089e816d48EE215",
      "txHash": "0xdf75bea4b0e617ca8a43f5f05d18a52e0054e5ddb003c595ac2e0b95a99f7951",
      "kind": "transparent"
    },
    {
      "address": "0xDC0Af13e943B812D9628982268035653f5e9aa34",
      "txHash": "0x77566259c9235ffa44404090b6c9f9345cecdace4d4df2718de758dc33c757e0",
      "kind": "transparent"
    },
    {
      "address": "0xF218529dBBd068A27F592d1E997CE953fda13F50",
      "txHash": "0x80031ae83654b28793b274cfaa4cb72feb898f89f71eb92d06551e8ed5836609",
      "kind": "transparent"
    },
    {
      "address": "0x1E81C582CE0eD959EF2D53c3254CFd67fC727C1d",
      "txHash": "0x2d17cfc5ddbbd30df4176594ad1f9a4e8767fd7c37b5fc021091bdc4a8920fe8",
      "kind": "transparent"
    },
    {
      "address": "0x70f456A6748D65f3d72C37B5b63E09Ad146e16e6",
      "txHash": "0x3f50f74b610cc5ea68a237969bdfb00a6a6ba13d852d4b974608b236a05ee4ce",
      "kind": "transparent"
    },
    {
      "address": "0xa4a95F0861c56E1E337ca7467c1B1Dc4c292e698",
      "txHash": "0x0c7551543e90c2f12100adb560106a7da248e1a41b8fbb53098496265928d114",
      "kind": "transparent"
    },
    {
      "address": "0x9879517F80DA204eC2994022De98B708EF25e8d9",
      "txHash": "0x8ed8a7e52edcffbf14a2b3808248b42caaf6e28681a59aeb5372ea815c601398",
      "kind": "transparent"
    },
    {
      "address": "0x2Bcc1e7F6A96Ad57151A3d5D0B43c542D805f43d",
      "txHash": "0x4f13c47004a95e2ce29c41e0907c771472d7af13569ab4035be0b0436facdd87",
      "kind": "transparent"
    },
    {
      "address": "0xc437016634CE3f5713924F85637577fa36D3dd40",
      "txHash": "0xf75595e061f30ff333a0a62e6afffc71ae55934df30c1d1a14c2289fd3b489cb",
      "kind": "transparent"
    },
    {
      "address": "0x51fDB68FE8EA66d8a39da7dC62227701AF236100",
      "txHash": "0x380bb06a3d4231581b0c1fc227a5978b6a4db6fff3c3585576387c5d0d965053",
      "kind": "transparent"
    },
    {
      "address": "0x8922d5c9038f698F869296aD7A308d4Cd65107B1",
      "txHash": "0x7fbc3e8f3f7d23519fbe7552bdd56068a635cc3f9b9eda47882dc8cbbb0298bd",
      "kind": "transparent"
    },
    {
      "address": "0xf7A499BF2cb188443Fb411E12502606f25C951B1",
      "txHash": "0x003b020fd880e847fc710a4b0b4f2f533917d75eeb1e3ebadaeb350b31008a9a",
      "kind": "transparent"
    },
    {
      "address": "0x328465865519787ACe35875f5d793dd11F3cf4F7",
      "txHash": "0xcb2879c59426605c2c14f785d0df6892957296dd6700ca0bf0341f81cfab4a75",
      "kind": "transparent"
    },
    {
      "address": "0x4c4FdcB65eb7825A56c09a01b13F31e3c1BCc215",
      "txHash": "0xbee5b72cd99ca1d18ba60bd47c0ed14a5d5771a22bd3a9c5960cfc695e7faeb7",
      "kind": "transparent"
    },
    {
      "address": "0x8b0e9c78b8F3a3d32dded6E2857995835031D195",
      "txHash": "0xa970ec7ff0a0aa4a2bc6c787783c924a99dbc41a4ac9e840e32661aae26fb3f8",
      "kind": "transparent"
    },
    {
      "address": "0x903c94b94a7283e92C0CB82386dEd817e1A0eB3e",
      "txHash": "0xdc5a03f4865f613be72491e566d5ac9938a6249ad9f655496e61c6f1bd86f0fb",
      "kind": "transparent"
    },
    {
      "address": "0x2e60A68fB6f0E32943aA396062457215101bA8d4",
      "txHash": "0x1f665a366a7896f50d298e38c0bba2aa053ee8b15ae6b23021c6a20200139f91",
      "kind": "transparent"
    },
    {
      "address": "0x7f9b4d501f91a6A08267438c3E70d4D5D89B29cC",
      "txHash": "0x6c4b65cd835ebc36a70f2758484d75698246ff35407e1209b961c30ec2bec631",
      "kind": "transparent"
    },
    {
      "address": "0xCC15089F43b88aE00dEadAE82D9d1D519f7078F1",
      "txHash": "0x525cdceb355584c24b50182aed3bb9c187dec17aacf5c84ee988cc4f4718179f",
      "kind": "transparent"
    },
    {
      "address": "0x397752a0D915e3A660515706284F0198DCeaBA39",
      "txHash": "0xbf102669312fdab2778895145889699832548a95554e34036e03e9a37442c67f",
      "kind": "transparent"
    },
    {
      "address": "0xa4Ee12711473bC3843E20629E69ef5301C601543",
      "txHash": "0x87171457f8e9ecaf1f1055965c3e9f29889bc45f84fe583eff0b12c11c52b701",
      "kind": "transparent"
    },
    {
      "address": "0xE4fFDc9501b36992675200eC98356c60FAAC5715",
      "txHash": "0x817cb25cc341922b261f5096f349ee415d2b9becb77afa5e2ed0973ffb0dbb3b",
      "kind": "transparent"
    },
    {
      "address": "0x62E67149408D8EDFE35E06bac9906D0fbba62dC8",
      "txHash": "0x1e06b7275a34fdb09e3da907473fafe468049eca5b1b2744b983737880f0e9da",
      "kind": "transparent"
    },
    {
      "address": "0x6d406445b951F56B14eee5BBAb484585C3D5031C",
      "txHash": "0x29a41277af638cbd78a75995a1f079d5ca02d82c4dd779642cb53a59d925bc02",
      "kind": "transparent"
    },
    {
      "address": "0x4Aa8bD0B9b3652F043583a4FD5BB05b7b4924BE0",
      "txHash": "0x7ff919a0d23dc01bdb9ef853237bdc6fb2ffd2125773732ca49ac1f0a965a3b5",
      "kind": "transparent"
    },
    {
      "address": "0xde50E6910caEb45a577dA8f18558aaE7d5A4A6f4",
      "txHash": "0x90b7bb36548a132adca63e48e6e0ef7a64f5b0787b006af0c966ad3045d7ad68",
      "kind": "transparent"
    },
    {
      "address": "0xF3079Be8EfE19ED53be72312ea051E6D18DFE1dF",
      "txHash": "0x75736829f9f2650d972959159de8bda0475a57c5471b87f8ae671889f1c5ce37",
      "kind": "transparent"
    },
    {
      "address": "0xb157bD7Eb0aC12a2785bF1697ACa6671fFd4f88c",
      "txHash": "0x67779bf8002bf0bc6802248d94dee9e55981ff51f03cb6d1887230f1d992c27e",
      "kind": "transparent"
    },
    {
      "address": "0x19dd9EdF702173f4391774D98f99309bE807255c",
      "txHash": "0x44aa9e146827643b3893bfa1151c84773f85757bc360f722ae984086efc631da",
      "kind": "transparent"
    },
    {
      "address": "0xCc3dB68316972B9fE61bA1677e6EDB62463a6f07",
      "txHash": "0xae5bb21351a12982310afb4fc9221acfb88a5162df607aa8344047dc81290eba",
      "kind": "transparent"
    },
    {
      "address": "0xBaBd8223549528beD36047DE8775099D88F6FfE6",
      "txHash": "0x50401da0f3bc2f10727c10ee65bf8bd96a3b015acba722f8b12ca155e5f3a07a",
      "kind": "transparent"
    },
    {
      "address": "0xA0C5Da55FB0ed6ed3847b7a518Db811c2FF431c3",
      "txHash": "0xb6e037b8d667e3d07f7ab21148c569ea1137da721f8f3cf36174c97b8c7ad406",
      "kind": "transparent"
    },
    {
      "address": "0x643DB513659d94BCf66bEF7B4e899b7d4548AcA7",
      "txHash": "0xcd9fb516bec6ead8d9ade67c7e9c5c351522620cd091b4bbba281935a4273b54",
      "kind": "transparent"
    },
    {
      "address": "0x0FFf08010227b6F32657ddaB300b00d10E466cFa",
      "txHash": "0xa5a231362bb024586bb08a31145dcd4cfe1de4b87fb2a1d8715a5549a482e17d",
      "kind": "transparent"
    },
    {
      "address": "0x3e59cB7d4CF826451D16c2c36D2986fEb985092f",
      "txHash": "0x7712dea97872079fb7c25613e84eda3f2437b3a006ad89d27ca8466670341e16",
      "kind": "transparent"
    },
    {
      "address": "0x24393Dc3B34776354FAA12F2063a4942dd755C43",
      "txHash": "0x350d2fef6a1e96f8a64f506bd9df243fa46ea92908cd510e8b75a74bce39ae6d",
      "kind": "transparent"
    },
    {
      "address": "0x946CB0997c75d16B42344E5B0924a4B235b20a86",
      "txHash": "0xccf1d2d0e6a5571b463a6a7911ebf58f600e4d6e9065cbaeca63b8c10632c6c3",
      "kind": "transparent"
    },
    {
      "address": "0x128B0756806F5fF7809A77B6a4382F20648E3d3E",
      "txHash": "0x6823f46d611606db76d41af312f6a303859c2552a052f53ba86b9af047846652",
      "kind": "transparent"
    },
    {
      "address": "0x2c5893E5Af26Bb423C26C9cC3f0820823C04E640",
      "txHash": "0xb729e078cfc8da524bc4ac2fed3d018311ec6263d79b38fc257c2d98feec8080",
      "kind": "transparent"
    },
    {
      "address": "0x19b02F0866789fEB300C50ca2a614384A11015F4",
      "txHash": "0x1ae73cc3aaacd06b991a49851b0e5cabd00af0ca0456ff4dd5ed864a5908f8ed",
      "kind": "transparent"
    },
    {
      "address": "0xe1626Bb4fD00Ef8712efB5724d650C61E4f09b77",
      "txHash": "0x192dec3027dce3feaf472a6e83273d0dc013a73f5a2fcfb74271ec86925ed85e",
      "kind": "transparent"
    },
    {
      "address": "0x5189009aC27d516CAc18E7D7DD1029e93ae40Aa5",
      "txHash": "0x3c8622ec5f9ea013b805d2425adc05c1b9193f938e15ed94ab9d4090f481d92d",
      "kind": "transparent"
    },
    {
      "address": "0x95C9d6Fa25eB39e1857b8D4790897A9555EEF9bA",
      "txHash": "0x7a9dbbe274d490cfa3e906391659bf1f31c4b675941d99a4f082b35860d7af15",
      "kind": "transparent"
    },
    {
      "address": "0x1dab188f90B880453622d99a8688908E431339D5",
      "txHash": "0x91343e59786f148431aa41844e75d5824d77d514b7e963070ce075406596b547",
      "kind": "transparent"
    },
    {
      "address": "0xA54517Af283E79FCeEC58092375215c1b4408D08",
      "txHash": "0xbef507479df49874c1564ef70d50414cd2fb5bd6cc0f97f86ad72b929d2cc908",
      "kind": "transparent"
    },
    {
      "address": "0x6431c2f27aB523f19773B44F6D13059Ae25358B1",
      "txHash": "0xcf29022e964e7c6384ca87b6ef80a3fac0414520fbdbab55dabdead869de07b7",
      "kind": "transparent"
    },
    {
      "address": "0x828ae0517274BEd43Efdf1ef980E6089771A9DA2",
      "txHash": "0x8a6159395817c3166c92a8b7943da4a7c143a4e17fca30c399f1b61859f65312",
      "kind": "transparent"
    },
    {
      "address": "0x189f0da59058a236A9c5Df997153a1D801E849ec",
      "txHash": "0xed50ca7d393cae1b7a4e2287edccdb0818721266e97ac0fed2bfa6f5d41c3f2c",
      "kind": "transparent"
    },
    {
      "address": "0x9B09F08bCdf7809DB68C778F651308008c65BA4c",
      "txHash": "0x311524bdc45894f0601204a5f60b550ffad4eb85fa8fc14016a7d81df769112c",
      "kind": "transparent"
    },
    {
      "address": "0x2A5b18af330c8ab727C0279CCf39AB21E5e991Ad",
      "txHash": "0x5ed92134a277c11e6aefcc64a0db5616b943cbf7a5828efceb3d43febc9345df",
      "kind": "transparent"
    },
    {
      "address": "0x08b30D194c81Ad7087b03C8ec27fF1625D7953C9",
      "txHash": "0xad37ab83ebdca5dfe6877cb6f85471cd010a913c55f03bb8648a93d2430674ca",
      "kind": "transparent"
    },
    {
      "address": "0x376df141793C778e84AC88d7d9a49C7E335bF442",
      "txHash": "0x80a8715ab65859273162b01b07bf3ddbb06d5a5b908e20b4621a767a7743fc85",
      "kind": "transparent"
    },
    {
      "address": "0x0025513CbcB4247A0ed06e5161458863Ea8aE4Db",
      "txHash": "0x35528f0b80861762ba67ea86c5934baea5744ed9cf611db7f99c7e42b78cdf59",
      "kind": "transparent"
    },
    {
      "address": "0xC9648F4F3AdD3E39CB8aB95b5C666135718f798A",
      "txHash": "0xc58ba61b08d40f31fe5b4b60614f7484798c42e0a6acd3f16e4764114cf02310",
      "kind": "transparent"
    },
    {
      "address": "0x7D8D5b668aBfBcAEfe667c175968DF57675B8693",
      "txHash": "0x437cd674a7bcf91172d8cb57f50c62d7ac5c6e4660b634b42f56960da726ad29",
      "kind": "transparent"
    },
    {
      "address": "0x0c63C7F0d2EABeF97550cA8A1e152E3438eeF8EB",
      "txHash": "0xee21a7ed97dafb8698979dc562a0b86958f5489bbb07460ad8d5d5308452aa06",
      "kind": "transparent"
    },
    {
      "address": "0xe3a67d2E1c4235B6EE27B862ed6F3B42Be223478",
      "txHash": "0x29bfe258db83749fe805723f1a5d172cec45bf45fd5ba9f8125b55409188c623",
      "kind": "transparent"
    },
    {
      "address": "0x47a25aD1a721DCdd0f6a3102CCC8E88c99cf5453",
      "txHash": "0x54d7169247af1715df214febbb2b38d044e04e70a36bd166d059e5cc518b1331",
      "kind": "transparent"
    },
    {
      "address": "0x9Bc23516fd1b8C25AD1d457065C2BbFC2B9f5BFe",
      "txHash": "0xca0af7263e503ad1facb43224fcb880529653a387f87f0cf967083a8485975c3",
      "kind": "transparent"
    },
    {
      "address": "0xb35470c7A0Ec1f9A6F7875502e8c2699A6c5c5d8",
      "txHash": "0xe492f29e7882faea6626a37967255d4d39baf5ddd10055cf4ccc3ce302cf70d1",
      "kind": "transparent"
    },
    {
      "address": "0x8aB985B9731bA9F2586794e10bfAfB9D4A69dE13",
      "txHash": "0xc7bb8b513c0cda295e431ae8fb52f56631bda27954dbcf0f9acd5245250a4154",
      "kind": "transparent"
    },
    {
      "address": "0xf5D5360B58b8F9B86b8e20120039078aBefEb094",
      "txHash": "0x9589b6d0acf2706864b2e4bb9514a3026d93da3220da0c93490e62e27df0c422",
      "kind": "transparent"
    },
    {
      "address": "0x45d845EFB0d7F0275F5772f2f709a010e9B9F687",
      "txHash": "0x9d56f5bb9666b464f327b371bd4a8d9b7803a46df1bcd4483a3e658cec67c274",
      "kind": "transparent"
    },
    {
      "address": "0x2a13AEb4E782C224Fdd5cc4421503F9Ff248055d",
      "txHash": "0x3005f16cc81d6ff984fc0596d35ae64c0fb203eb57731ae13dfc1095ba23537c",
      "kind": "transparent"
    },
    {
      "address": "0xBE6719F06Da5557380e7051CF9d3CC4E59751541",
      "txHash": "0x7aff36dc8ebb791e819ec797e82307a42cbb857ec23738828bbd98a9fa2d51dd",
      "kind": "transparent"
    },
    {
      "address": "0x05a3b8eeE301Fe70414c33a7B97F921b27A63489",
      "txHash": "0x9db937e2cfe09295aa127367e7083ef66ba341d8722250fae5100e0848afe0c5",
      "kind": "transparent"
    },
    {
      "address": "0x59A0acF810bE44915A84A0c5C79c9B905441D219",
      "txHash": "0x5db37df24dd18677dfdc96dffd06f80348546e96b0ecec8a321a8600dcee5b5f",
      "kind": "transparent"
    },
    {
      "address": "0x00d643A7dbF60198a0B1665b55C67Bc741Bf90EF",
      "txHash": "0xe83fd3f555ba5165274ab4caa8ea68b53410f3b663d2c36730f9792fd74a388a",
      "kind": "transparent"
    },
    {
      "address": "0x6dDd0E11Ca91d4ED3F9b7854ebfEf89aFa8b3Ce1",
      "txHash": "0xb411766cbb458fed2c460fee344727b16d6638375b5b16d52ff14eee3ba359ba",
      "kind": "transparent"
    },
    {
      "address": "0xB81AFA7B26dDFDe99F6D439Fa5d10e6963911Efb",
      "txHash": "0x801063e50a5b07680089fa3d0010e8d0f4cb411378c3f136ace9fa159daab035",
      "kind": "transparent"
    },
    {
      "address": "0xB11a3DfE8C3D8546fE150fd279b936B0796e51CE",
      "txHash": "0xd00002d7a7fcf5f23a8d097e72e87e8a8bdd4252deffa39a6943fcb2681387c0",
      "kind": "transparent"
    },
    {
      "address": "0x3c53e9a612d631652E497bF8Cd6163a080EF3667",
      "txHash": "0x39b18e2243772cbaf6799a321d3e83434dfe06d4ec6806592df9b378a1f41fae",
      "kind": "transparent"
    },
    {
      "address": "0xA4ba0eb02eD028f047a907FcA19Cf0eC3e091F93",
      "txHash": "0x9feef608d3bf063bd01467e2fd50622dca89a8bed290ac9ff3262f553b94dcd8",
      "kind": "transparent"
    },
    {
      "address": "0x9405Dced3D558604343fBFc3A65093836Cb6677b",
      "txHash": "0x79d0bd082ae70ffd76e28959b3bc62ce67b8eaf8b5b42ecf66a4b24f5ce028bf",
      "kind": "transparent"
    },
    {
      "address": "0x97E095AE2Ac21503e0c2Dc26E16255996675419c",
      "txHash": "0x6733739f5a5693a9c3cae6afa303bdf473c64607cc1cbf905de3fe21be10767b",
      "kind": "transparent"
    },
    {
      "address": "0xA1747881225817f0809F1F0B9E70222E2217b1D8",
      "txHash": "0x829bfd0cbd7b26aa5e41cf4068d5bc4aa689f7b6f4222d0c361e0d18329336d1",
      "kind": "transparent"
    },
    {
      "address": "0xe094440e3cafa27Eafaa21559E0fA1f58e23fAe9",
      "txHash": "0x1c911acf53cf54e40476757e217453804dc13d85c19c30bcb27dc518a296646a",
      "kind": "transparent"
    },
    {
      "address": "0xF0Ca984c471C6E7e3B223eC95CCD6ff1a2D67f1f",
      "txHash": "0x70a3cd24bb5b7873a919636ae362cf71b7fa2ce442c4df175cd473de1cce1042",
      "kind": "transparent"
    },
    {
      "address": "0xA0FA97525F45074D8e5c93F5bDA75e81BF1cD234",
      "txHash": "0x04351e55e8e742f6f7208763bcbd5bcb7a9ab93fd8be55539969c2eb2f5d2eb1",
      "kind": "transparent"
    },
    {
      "address": "0x488E45D12f7f24B8db4250655d77B3f635B1BA6A",
      "txHash": "0x4eeea69a5800851386aa8ba0903d0bd09e1c8ab876802ef96d8179b882965b28",
      "kind": "transparent"
    },
    {
      "address": "0xeea9943F558d3599f18E16666D46036aBA75b799",
      "txHash": "0x54c2248e161f6ac4541470a26e8f3a5f7eb910def03c199e0901b109a64974ea",
      "kind": "transparent"
    },
    {
      "address": "0xC6bFf98d3E810c97225a1fF03B3140635e6AA4f3",
      "txHash": "0xb2071c3341e94d2dd2aab5704fed2d9facdb61a54c30d4d0eb6d90f1a4dd0f7f",
      "kind": "transparent"
    },
    {
      "address": "0xec90844161242021C7223060B35A6961dB338c15",
      "txHash": "0x1392e430506532e778003f9ad12e78b9b6e2e0cebee890ef6b5b11ed225e9d93",
      "kind": "transparent"
    },
    {
      "address": "0x0e58Df4A6FF0d44334B322A8e9e239C026E0f34d",
      "txHash": "0x2e541ef07c3474fa4d6b99e383027b02b9444287bb963c6c1ca515c56fff98c4",
      "kind": "transparent"
    },
    {
      "address": "0xB510ec2D7B6C8F28D634C31b2ece54F5b6fd5bb8",
      "txHash": "0xae95b99cf029b3112b2eccde9121301922f98268b6e976de98a9a74228f0691d",
      "kind": "transparent"
    },
    {
      "address": "0x9eb3077f955d1D31e662a03DCAB6Eaca6E4eC8E1",
      "txHash": "0x63107ec046e1e237d28d1e5ba527b44b2bc1d1a1e05989cce047fde9090bb69e",
      "kind": "transparent"
    },
    {
      "address": "0x885cA291C8563Ad0A449692E50102085ECFF702b",
      "txHash": "0x336f1091b3742f59e541e0301dd6ab4b3e6cc91884f577429618470f1702c0ad",
      "kind": "transparent"
    },
    {
      "address": "0xBf9d49Cb70923E298472114b0560E10B4116d0b4",
      "txHash": "0x3b0fa9c76e1b4d4bbb42d4318683a169380c53cc1071d661671181e56886e342",
      "kind": "transparent"
    },
    {
      "address": "0x5c9907649Cc6868016cC81642A6d8773190FeF7f",
      "txHash": "0xa78334b5e87e8075acbc43102cba9758ac67616e1c2fbedc12400ae31b7fdb8c",
      "kind": "transparent"
    },
    {
      "address": "0xdb95FdBdE40CD98751615509aB77443e34CCf890",
      "txHash": "0xf43d2d9d968ad70b1d390dd2c471b3695aba48efc2ff1d4f0ce4ef5ad1a34853",
      "kind": "transparent"
    },
    {
      "address": "0xE362752A55Dc9E91C6002743594526F885e61318",
      "txHash": "0xf4bf4acafdd20a7da2f757f6f8a052e6bd867e0d821af190ae64641d4118bc92",
      "kind": "transparent"
    },
    {
      "address": "0xd63a1c7A86b9b7e085B5277345D33765572cBc36",
      "txHash": "0x697dc9e659b64508fd0247b7a8400ac139132c17fa2bf38d4d33c14cda80c66b",
      "kind": "transparent"
    },
    {
      "address": "0x0E33B8ACF238B483503c84b9c5733EBaF98E84ec",
      "txHash": "0x925fc2ff481380560c11c89830de7ad4dbb4748ff7780b27cb30ef38cf317770",
      "kind": "transparent"
    },
    {
      "address": "0x8aD130ee7b4B6769d06d6D7E15f00690d2e97fd6",
      "txHash": "0x5dc8dbc4ad1d559e3f1ca218177d5459147fc23f6b3c7bc81523806480f39df1",
      "kind": "transparent"
    },
    {
      "address": "0xE999B005f8Cd8b93Cea5A87Ede24f1C57D4aEe13",
      "txHash": "0x523d4787835ca2775f8797c93716d36ef8bce33b7c07155666bf24bc9eaa3a8b",
      "kind": "transparent"
    },
    {
      "address": "0x282B54bE85145c119b625Ed1D569dD8b09DAbb7A",
      "txHash": "0x20f57124cfa66e9fce7c8ab7d4d379fb8f8b9552a417cd6827a1b6a96a22edff",
      "kind": "transparent"
    },
    {
      "address": "0xD1E0fB1100aee8A7deE8A56696aD76c4D070652A",
      "txHash": "0x16aefe22ddbc8ad38e62ec3ec77cd5921bba3a46f7c8ec1f348217e9b76e37c8",
      "kind": "transparent"
    },
    {
      "address": "0xDed3EFBCc32119c557acc53A00454740D3C22482",
      "txHash": "0xeb675eb6a1e143bfe42addc7333d3df4c90fadaf17b5f6f2f48594baa5bb2d60",
      "kind": "transparent"
    },
    {
      "address": "0xb24CA1A72E8B4b6490070b1122fAD10C96f2498F",
      "txHash": "0x6c9aa29cb4e507add1c32b0e580e3a5b1855ecacd7ac3338d570bb3ef462fd81",
      "kind": "transparent"
    },
    {
      "address": "0x3201CCc8C605988de283eA58751D90867D9a87f6",
      "txHash": "0xb0f6206150bbbaeaf03e8dfef43883c3671cc1345ff34985d069da1a278bcef1",
      "kind": "transparent"
    },
    {
      "address": "0xb950Df887C07C916890Eed3fC77d53E3752B5abd",
      "txHash": "0x56e0d61776a50da5c3030214a9128950eb67ddbe23a5ef958620be3aa0d394a7",
      "kind": "transparent"
    },
    {
      "address": "0xe8dfB1A474B5591b6353fCD44E29b93e585AD541",
      "txHash": "0x260d15521a7ba57efd2623a08d3b64a91bb8f167cedd238f238f1bc4b92a90ae",
      "kind": "transparent"
    },
    {
      "address": "0x19C8bec4766335427A8a6f91F2097f6Ebf080845",
      "txHash": "0x1a241a177e480acd9ca14401464673cbb504600011f52b7ef088175ccc47e67b",
      "kind": "transparent"
    },
    {
      "address": "0x836a87bC589735dde4Ee764641b77EdC36e71e46",
      "txHash": "0x26cbe8a66367a55715854fe94eee6e12102c5c6adc54ae277c34112044d9f4ba",
      "kind": "transparent"
    },
    {
      "address": "0xd827F653AC8F929e3C11762D4896227C9a153336",
      "txHash": "0x9f05b2a00753b6ba648b9018bd650ea9feec61da0adbf09c4749acc6d9b4616b",
      "kind": "transparent"
    },
    {
      "address": "0x37fFd17912b3bD02f0Ded11e82C49F64e18f7856",
      "txHash": "0xd9df78f68771c4232601a06d8608f3af6eb7725c5f37fc35207738360072c979",
      "kind": "transparent"
    },
    {
      "address": "0x676308d9CCa15b514EC62C6C20d5a3dA4ac20ae9",
      "txHash": "0xb4cf4b78c5aa1c96687fdf45dce1a47fc275a0a309930d5610e9842024f522a7",
      "kind": "transparent"
    },
    {
      "address": "0xC9464Fd7C943bD779F0D60AC54EeDd3eCdEcA59d",
      "txHash": "0xb88da4ed29d6fc4d850996eaadf40209418f3220b63d3a13c05f9a815674cbaf",
      "kind": "transparent"
    },
    {
      "address": "0x1006b089096fD73dF1AA90c80959709263Ae1731",
      "txHash": "0x8df753073e08addc3e3f932ac6b05639f73e384c5b6f0fb37aa56e7f5cae19a3",
      "kind": "transparent"
    },
    {
      "address": "0x3fD7aBA3b21604e310D39Ae609795a1ca0037D94",
      "txHash": "0x42842f43a14f29ab1179d24216788019704b83d0ddfa8b714ed09a43cfd0b70e",
      "kind": "transparent"
    },
    {
      "address": "0x72d65e5a7Af7c493f00529F8fD11dc2fA6892d59",
      "txHash": "0x19da05cfdbd7af8c9a4a6df654657d6c6df315549bf0035ba406d00091fdfd9f",
      "kind": "transparent"
    },
    {
      "address": "0xbD5dfBaeEFA738AC7700d1b2BfF8b76b5551d953",
      "txHash": "0x40ecbd83d334e0caebccafd641744b8feb6d12f698220a28b2dd63eaca220675",
      "kind": "transparent"
    },
    {
      "address": "0x360D76Ebe7BE9745b558B6C81B7Cf382477fbe77",
      "txHash": "0xbafcbc3a12b75e1e44d72c7dae3d21e02dd9ec85006d0d6b0476b69a0c4bf8cb",
      "kind": "transparent"
    },
    {
      "address": "0xf5425B2561ab99e1c34e48Efe1B0227e9bFF0aE5",
      "txHash": "0xfaf4c4f377a2719601a61d4d784aaf542e96e1bf8cd0250b17ce40bd91798531",
      "kind": "transparent"
    },
    {
      "address": "0xb40a3AA8c43B73B314Fb60596880971949EE0cAf",
      "txHash": "0x916ef4247f5dafec7760b136fece0178bbe8b7963eab2d657ba5cd25f5bfb685",
      "kind": "transparent"
    },
    {
      "address": "0x6Fc50BFFfb060e4f61710a843A58d232CAfac214",
      "txHash": "0x35a82d9a3d3bec4a53806ba82345d00f10ceecf1a275640f48daed1fdde5e1c4",
      "kind": "transparent"
    },
    {
      "address": "0xda9C79e37a7202777049E28566CA4f063419b837",
      "txHash": "0x2c0adc0ee55e37b44a06e771660e6baf3456db18214e8de83ef002524ac63d38",
      "kind": "transparent"
    },
    {
      "address": "0x8CfFf76ea2Bbe1445BC3b8D7E477c10E6ACE9a83",
      "txHash": "0x4c8a8a5b5f3a27e8a1e927492b9be553f75b37805c685c7495a029dabf199fc0",
      "kind": "transparent"
    },
    {
      "address": "0xC10B6DEF8ee1c32ae8c2c4B3746fd449255Af7FD",
      "txHash": "0xb77954cf1648d2856070e755b340040058410018e278676e9dd38dacba4e5b40",
      "kind": "transparent"
    },
    {
      "address": "0x46bAf4AfD8c14A680254EADB1120196Dc820B0B2",
      "txHash": "0x2cc08c5be634e495c1b1ab322d4c3dfe5c122769eb965e99bd3355a0b0594175",
      "kind": "transparent"
    },
    {
      "address": "0x4ee18E2160AAeEab0354f0C0942fA1d3dACFbD9C",
      "txHash": "0x991ffe965d4adabdd02fa4a602af6da1640d695864e05731c7ac41b902e9aaba",
      "kind": "transparent"
    },
    {
      "address": "0xD981ecE10C9530b8F6CC6Cb06f4665d72CE23723",
      "txHash": "0xbee019b1251abd225abf0559285f68c0e96184808be61a65acd228e8f95aa05f",
      "kind": "transparent"
    },
    {
      "address": "0x5Eeb5FEe9FA8D988EF4A0EEd6EB7c265a06B41a6",
      "txHash": "0xc3546e1a079acacae26eda83de10d2d798ec044b6a8699e75625d5708911df2e",
      "kind": "transparent"
    },
    {
      "address": "0x9EE66Aef9b809D8641BA0bb06c4D36035605C0A4",
      "txHash": "0x0a7f9d12811808e106baa28678fa3379221da90a042699d1236cd8e6e0282532",
      "kind": "transparent"
    },
    {
      "address": "0x2a6FaBA668c140A15ECde4205EFad027C95CD574",
      "txHash": "0xff079ad13885b5c24be883274f98365b55dcd6e7d5888f3b4a199c47e5f07c7e",
      "kind": "transparent"
    },
    {
      "address": "0x49Eab0C3278cD8E3e4596E723f9d278D485B6ED9",
      "txHash": "0x6e58ae115a521f0cf7ce8b90c9bc2a8967885b5cc48f026200650fca3defb941",
      "kind": "transparent"
    },
    {
      "address": "0x053A580bAF7857589E229539Cf5225f0946131ff",
      "txHash": "0x016efc193ae2c71e6fb93f7c09414c8cb78984807da53027b4348c5230f0e62d",
      "kind": "transparent"
    },
    {
      "address": "0x3FfD0f9Ae4cB65D02BEE8704705621b37d6394A2",
      "txHash": "0x1c1c124eaa1dccec37a61b8eba913bbf33318c67f877a1377a3382424d9106b8",
      "kind": "transparent"
    },
    {
      "address": "0x74439172b12B720001C4b6b7541323eA0F4Af297",
      "txHash": "0x7f838703529cb58c002628551bf19a3675c476a55ca9094248d961f3abfe72d3",
      "kind": "transparent"
    },
    {
      "address": "0xD2eBeAE7f0e1F79618448c0920f00ae441966cFc",
      "txHash": "0xfa67faa29d92ad2302d6fdf937ac92047da4f9e26ac915e85e808ef9a2ca7f85",
      "kind": "transparent"
    },
    {
      "address": "0x810946a350BBB8e7541c2094aA6243C9ab7DFe59",
      "txHash": "0x9358a4e5850f1b81fbd645f5fac168b21143e070842df74a1dea645ec5e01641",
      "kind": "transparent"
    },
    {
      "address": "0x15F951e4471BBc0809ffdDA4771AFd11A1020c25",
      "txHash": "0x97e7b7530854f03ed27cec862a4cce33d36f2067a5c57493ca56a90afa75e429",
      "kind": "transparent"
    },
    {
      "address": "0xC3cFA872A89b4578EC350c676573f2112325c4f4",
      "txHash": "0x5b158bac389329bd3fffcebfd047f114311886d299ca5093d94e8f78a384ee63",
      "kind": "transparent"
    },
    {
      "address": "0xE44ef9A667491833E6a512f3f1Ce392e326c6966",
      "txHash": "0x1cee8acaa5f638391e08fe6f4824ebf1f20563f96bea6ceb49367b885830f762",
      "kind": "transparent"
    },
    {
      "address": "0x5872ceFA0202EbF4948e189260a7EDFBe53a6967",
      "txHash": "0xc1375d22c663bedda7457e18f18b71291cc70d0d3e8528eca23b03337c687f31",
      "kind": "transparent"
    },
    {
      "address": "0x07C952AA11F33D306c3F1fc87476D1Ee61BD7374",
      "txHash": "0x05b53275e6ca45fd73f3eb593575fef71c806f4847b12d96fdeb1ba2fb444286",
      "kind": "transparent"
    },
    {
      "address": "0x5e08F60B2956F4A7CA28eC1bd6BA62226D11D7B5",
      "txHash": "0xbce1cdefcbdb2dd3e5307386ee133f2807e638af5723260b806e2a62321d3a46",
      "kind": "transparent"
    },
    {
      "address": "0x13bED9679Ce705953E9260311308deFF08392b27",
      "txHash": "0xd66ee4952ab92e62ea384abc89e327c2585eca68724de600a0a9d1cfc4dc73c7",
      "kind": "transparent"
    },
    {
      "address": "0xA10FAa0a7C055ef90eA1555361B4ceA1C57a9bd1",
      "txHash": "0x79bdbbe811335fb24f21797b354e54aeae3e13362a9ced74b37e02473945ea56",
      "kind": "transparent"
    },
    {
      "address": "0xeaDae315b2ea2964903d22B88975B5cB071aFf4b",
      "txHash": "0x4904ff460b2a7f0c5b0aa2cc0272952e79a8d20fa5e2e1b500424280689aa220",
      "kind": "transparent"
    },
    {
      "address": "0xC0232CAC2cb3878b2f0eb3FfC76911e70CFAFBa6",
      "txHash": "0x8e5c7b54e527285b499909e70c6442db29a67d2bcbee183babe2bdd13657c892",
      "kind": "transparent"
    },
    {
      "address": "0xE9592B23Bf874078e3aD0082635f34f94092E3bB",
      "txHash": "0x580a2baed725c8dbb89b7e39a85c94297fafb55608f223b9c16f506b0d84a92d",
      "kind": "transparent"
    },
    {
      "address": "0x49044D97cf005645c7b453Cd47FdE3305a293846",
      "txHash": "0x3c3f526f34394c7610e3c26bceab5efe9b41d9e06e91a3759672a5ea1c9527a3",
      "kind": "transparent"
    },
    {
      "address": "0xf6BEE0f522752498a7c43B137B7251Fc69235DCC",
      "txHash": "0xfd7fde0b44bf9ed19ff4fc788025e94675f78d58110145098dbfff81b4912e10",
      "kind": "transparent"
    },
    {
      "address": "0x5575c19D3727Aa0607F401f020026b23E9f4DDe7",
      "txHash": "0x7adef1f603ae2fb0f0bc3f2021ab8db66c0ce880b628dde3391050e1fb857f68",
      "kind": "transparent"
    },
    {
      "address": "0xdf7742b8aE7CfB0b0f161aFA80497398e230f355",
      "txHash": "0xaf6a4aff8048a283111ebbcf9ef5e57d9e5dc337eca5510415fd7567fd71895c",
      "kind": "transparent"
    },
    {
      "address": "0x58B581a29313979293dDb9d1eb463ece8E1b8C61",
      "txHash": "0xdffca77d1e4d98d512dcd96bde85ac1b0326ac102c94775031d6634d8b6b42eb",
      "kind": "transparent"
    },
    {
      "address": "0x1A4Aa382CBfF4A80f01823f83525C949f224d18a",
      "txHash": "0xd2b0b9cb153b586ef0a1a3240f121bbbf2dc77ceb2258bf0a9432fd5a6661401",
      "kind": "transparent"
    },
    {
      "address": "0xB05054760fe9486fea7401fFD63405411c2dFeE2",
      "txHash": "0xbdb5be0cd4edf2bc7a2f3cc35803e081e23651979dfa4d129fb3b675de1554d8",
      "kind": "transparent"
    },
    {
      "address": "0xF041ea0F5d4e82650a91C479f417d94395042E92",
      "txHash": "0x3dd0ea9e8ba9cb750e38fe2f09c2152a69c4e6941fbdeb39cd9766282f694122",
      "kind": "transparent"
    },
    {
      "address": "0xfb51bf66074bFF1e182546C52e763e5cE267883d",
      "txHash": "0x7ce5a5a9d369893fc52af686ed8073cde491845217b202b439bbf8b13c7b367a",
      "kind": "transparent"
    },
    {
      "address": "0x4AfFa84Ce7360bD520c278970cc15cc995213E39",
      "txHash": "0x37aa0c070f27d2dfd57eb20ad49af96506ee3903f06e319b53c0d4f819307229",
      "kind": "transparent"
    },
    {
      "address": "0x19a7b630328fe7eF5B04adbd4aeA019a05594168",
      "txHash": "0x755bc05a0609d30ab06c3edd69f63835446b7543700675e874856109040d75c7",
      "kind": "transparent"
    },
    {
      "address": "0xb4837D9e3Af765F550AEe5721413656a2E916aE9",
      "txHash": "0x89ba9919eee0017371309d31ee6b9d023a5e85ac4b4d903addeeceb1fc33f894",
      "kind": "transparent"
    },
    {
      "address": "0x48811A6eC51aD0ABcdfd564977d788080cfccCAF",
      "txHash": "0xccc2c53006ec04f99f0854336de69dae17e71c73cca02a89becad6368528e454",
      "kind": "transparent"
    },
    {
      "address": "0x4c2207aAd1e117BB6873552e0b34f6E9C42E2618",
      "txHash": "0x542bd183d93f4e15cd227c4ef703f30c6a712c2b43c713bce9a51ccb2346d39f",
      "kind": "transparent"
    },
    {
      "address": "0x316E61a2C25Fc48D91F009De16d4832ea96aA5cE",
      "txHash": "0x3a4341054b166a2f8bf846d19c97294972d37a08a2b33fc86ce03d1b046224b5",
      "kind": "transparent"
    },
    {
      "address": "0x5ADA68d463b3D633125006B55Fa3E775Fb9469d6",
      "txHash": "0xfae8c0b8d521dfc9ddfd8a0a28dec5e349d67060cb6d1c585646581c0e34bb56",
      "kind": "transparent"
    },
    {
      "address": "0xF1A6D19Aa09fc9029F0393713a113Ec5faf0d17E",
      "txHash": "0x618df5cf97ff0a9a8773f3b7f534d69ef26a86a3525ecea86d0d042367a3e624",
      "kind": "transparent"
    },
    {
      "address": "0x579FB0dAb0EFB5ed6f105d12c3cd9F591EF850Ec",
      "txHash": "0xa3bdcfe77bec26b8f73fa0d99161f9e7144437f16945abb9f79371ba5f9b5a26",
      "kind": "transparent"
    },
    {
      "address": "0xe2B969B33224BfdADCbddEeD4859Db1a5BF12B70",
      "txHash": "0x36be37fba73d0e769ed2e1f98af96dd3f011ebb7a4e33b65c366dfd1a4d7d153",
      "kind": "transparent"
    },
    {
      "address": "0xD0a32A96A1806Be259AdeabbEb46910D9B049060",
      "txHash": "0x39657e5e6b374c33111a2ac441140ff67f42dd0e6416a9e4c9e3b984d9dee0e2",
      "kind": "transparent"
    },
    {
      "address": "0xa69222A0f5fCa4Dc5FBE794f00E6E9BD6BFAFB5b",
      "txHash": "0x7a67feea277865a0ebd8d4b32ccaa93dfdfe458170392c6b3fb2be1cdf0a3eac",
      "kind": "transparent"
    },
    {
      "address": "0xf1DAed73015e032F6451e733c69Cc266A6453Bda",
      "txHash": "0xea66c342a9f0a08c3effe170637b12400711790ab4ebb133f95064dea060fe4a",
      "kind": "transparent"
    },
    {
      "address": "0x3a819de70Ba245Cd0944D103661400FD7DFf661e",
      "txHash": "0xd47a4f8b78a5da8a991f6b43c95f4bd46f0addbf5ee2a6e5530de492da2bbf7b",
      "kind": "transparent"
    },
    {
      "address": "0xbdA03A129E742603434F5Cd0349B63aaAFC483Fa",
      "txHash": "0xbaf371e32df66662a9b580ca32e016a35a0b069a2fe1d87230bff880f557b820",
      "kind": "transparent"
    },
    {
      "address": "0x84a72696CfF147eF4de2cd213825e152FE094eD2",
      "txHash": "0x7de7fb56054329ec0c9970b52526aea76e78665e2e1c4a66b5e603f6cb163d68",
      "kind": "transparent"
    },
    {
      "address": "0x99F2e5dF838D82278131a69833C3C8694Be7538D",
      "txHash": "0xb2f25e1f36402a91870026af54c91e6025d0c1d56fe614919a24e9c0f5372304",
      "kind": "transparent"
    },
    {
      "address": "0x4A53F1E5E071b8240C42863F8D0c8bfe9849B648",
      "txHash": "0x93d45c55260bc78b4e1e36ee95dacb72ba5d8fe5353778886b0d585679bf1d54",
      "kind": "transparent"
    },
    {
      "address": "0x4681fEA1D001aE6FdFBbe6f2f19c03be28cb29b0",
      "txHash": "0x1b748a1f641bb70f45abd62901d65538042bbec5a28dc4ad364acaf6388268c2",
      "kind": "transparent"
    },
    {
      "address": "0x75C6D8dcFe709D8CFCBFa1774175AD93b8C043F6",
      "txHash": "0x740c5a815a7af7cf6c108efe7791e0a8a0c8d326b4b53d5c947c94fc72dcfec9",
      "kind": "transparent"
    },
    {
      "address": "0x34203371398b28Ceb6Af941CC02C586dc70Eab19",
      "txHash": "0xe69c5bb788a211611e3e7eb495e0973194e9586cfa85aa24620400666db0d4db",
      "kind": "transparent"
    },
    {
      "address": "0x7202E223119e70e64ec9B09Df5df68CE09193843",
      "txHash": "0xb57bd4e4ef2938ee60b336dda7f99cff751228ce5edae2ee2f8493c93e4f8b60",
      "kind": "transparent"
    },
    {
      "address": "0xa20896188Ab1D7674390c227C63E18dB4Fe28050",
      "txHash": "0xd05dd81c37a2c20c35bf9a6441b1e9de74ce0ef033ff334ca605ba797fe562a6",
      "kind": "transparent"
    },
    {
      "address": "0x612cA19e3b582534E72e39b83A65c10326B8c87B",
      "txHash": "0x2a4b16bc3103a49c222850b055648ab8ad42016de137b8b264871f4574e78b40",
      "kind": "transparent"
    },
    {
      "address": "0xa15FdEcab0ac5268A2bC5db1E647Adf93416a6FA",
      "txHash": "0x95caefa9814b09806a873fba81c3376bc78e83c623d8000cbb72503491fa8f68",
      "kind": "transparent"
    },
    {
      "address": "0x48495a7a35437B4134a9df93fc1A957862821A23",
      "txHash": "0x36960e7e577d891ddb98aad2a3aec72bdfbe144f3ac211dd2e40da1bd4687ce2",
      "kind": "transparent"
    },
    {
      "address": "0x0d6A452effC7b8ca41B6b4939988bd18DF0f582a",
      "txHash": "0xe1b430e91b83f4f232188969e57cba09f28ebabd390eae994bfcea3e80aa03e5",
      "kind": "transparent"
    },
    {
      "address": "0x9b61CAc1a3a7AAaC359f7d36aFe57BA82111d123",
      "txHash": "0x125c7f2d9a03864e85a249d3814f928125d49ad092325228a5081577d4dae5d8",
      "kind": "transparent"
    },
    {
      "address": "0x363514563a1a77CF3B994D662c81D7D29367f63b",
      "txHash": "0xbcab6c643718f0e78fa0eaa1de3a1c3fdda48d12368ebaffa7bbd73f2d5df768",
      "kind": "transparent"
    },
    {
      "address": "0xC1f399BA25A8CFcBd8feE766E92D14518BB36FF3",
      "txHash": "0xcc9ba9a4bc75e9a84c001794cad2c345eeccdffecfe1015728b57d8bcd80209d",
      "kind": "transparent"
    },
    {
      "address": "0x478e19E70F6AE4A494Af9A5EF38e70037ec02eC4",
      "txHash": "0x18240c454b386c80b0f4bfd42f205a8c6b6370819a7bbda509881138c81838af",
      "kind": "transparent"
    },
    {
      "address": "0x1F6cC2Fc47b0F56182F81eC9736f8928A72e5c59",
      "txHash": "0x74cee1918e036849874bed946dfe8bd8449c0e2170e836061dba2710cca12962",
      "kind": "transparent"
    },
    {
      "address": "0x6Bfd049E40A93e87f364Bd71709F6B21e552AE70",
      "txHash": "0x3c66609133a233eb3a15af04e89725f0a38c413a354fe87dd8e5d779ce9a600b",
      "kind": "transparent"
    },
    {
      "address": "0x08F036e44Fd348f7fB441EdFCaFE1558715410EC",
      "txHash": "0x5a3a597a5a3bb92cf05d6c2bb3e50fbfa4cce31eebbc58c8bca4c344e071bc33",
      "kind": "transparent"
    },
    {
      "address": "0x10209bc979417e59e8c7814BFf61c56d185De259",
      "txHash": "0xbe181b796c1974d29b499c43258d3c1da8c9fee908fda71b49f433c94bff0c61",
      "kind": "transparent"
    },
    {
      "address": "0x9F24785B78c21c1Ef6bCd258EF671fc78F9359dd",
      "txHash": "0x1c007faff6b7daaa3f91fa1e32a6bc60962c3c9106e5359426ae858beee3f2bf",
      "kind": "transparent"
    },
    {
      "address": "0xbc4B0c0585AF522DBFbad8f33FcCfB57c36f2109",
      "txHash": "0x7fe79b5eca33de015d49ab4fb864b3d4de4a261c3764fb8d1ee42c359ffb9c2a",
      "kind": "transparent"
    },
    {
      "address": "0x0B3aadEcb05b561f3f355A55a91C9E3ac299c644",
      "txHash": "0xa1be8baceb4d6f25d39b102dfca8fe3dfe57e9e7be61dc2a30b585f4f53a692a",
      "kind": "transparent"
    },
    {
      "address": "0x540Cb49eb2d7832EE7b89390a66957ecaC38e960",
      "txHash": "0xb6fb720177dfea779f71f133165cb52cec81321bba1fed9c1011f4b935356f63",
      "kind": "transparent"
    },
    {
      "address": "0x6796111d9306CAD88C540936A225f8142EBB6690",
      "txHash": "0xfa9d472a18f4920268d569eda9371c22c3ed4efcf2b5c9a0a65caa65f44a35fe",
      "kind": "transparent"
    },
    {
      "address": "0xa038AC0C98B279324b8f3809A9427B8ACE3FFa02",
      "txHash": "0xa24b5e130ede5a6284288aaa27e91ceddc44513d8cb68cdcfe28d1f962bbd37a",
      "kind": "transparent"
    },
    {
      "address": "0x0e3B5ead6035D4d492884E935B05B47F45df15fd",
      "txHash": "0xe18cef746494bf45c3f7b1259597773cfc01c455b4c0ab2c5e2cadc3b208d61c",
      "kind": "transparent"
    },
    {
      "address": "0x1a46a6fac67BF73A4e76a60E8886508e592aBf58",
      "txHash": "0x6f6fa70160118163a925a1b79e1b2a24371617a1401cec75467244a65ce70c06",
      "kind": "transparent"
    },
    {
      "address": "0xa115f4C36c90DEb136b4c69A44e67ad682100b72",
      "txHash": "0xca3d2f0d03a786d245f4af681edaf37941708515db7dba1d5f8a39d701ffde12",
      "kind": "transparent"
    },
    {
      "address": "0xeD2284fcF2c5865d54030C95e8630A4a93CF7A24",
      "txHash": "0xda43b75caa8f9f0e4c703b92cd0c90bd69e9e0a058dbd79559b864a416ba522b",
      "kind": "transparent"
    },
    {
      "address": "0x0D2003EC0FE5F216686EecDC88b7A2361E6F41Aa",
      "txHash": "0x7843812e0a890ac5878c57602f776dae41c2d15ff5075bdc0a497fd1c7fc16bd",
      "kind": "transparent"
    },
    {
      "address": "0xd537d3c746a4aE3881306e9c0D0eDe270f91376f",
      "txHash": "0x737383d0174fa6f702b6f2b7b66d1347d99a768f6513ecf8fb21442e1418c556",
      "kind": "transparent"
    },
    {
      "address": "0x53CE87E85Aca54D027205050D977de23252ce8F5",
      "txHash": "0x0e9c3c849706962d45505aa2b3c0f62da6789459b14addf30a2bc3f471421344",
      "kind": "transparent"
    },
    {
      "address": "0xBAf73D0Fd7f1Be464D55De4b77A6F711E9F62F68",
      "txHash": "0x19712d643616ff8b00a23cd3901b7312abd90472966fd8bf4e1dfbd14daebe34",
      "kind": "transparent"
    },
    {
      "address": "0x491ce42b6F828379bf128dA44C22998511520524",
      "txHash": "0x0a8079604981f25394da664ee997da38eb8e9cf10da0e1a29839523eb48e8efe",
      "kind": "transparent"
    },
    {
      "address": "0xcB2B1e05D8E3372B9D451eACaDC696a9E019A9EC",
      "txHash": "0xde344e6010c89d1521bed2b304a06e1e4f27fd698e4fb89743f9ee634e9f355d",
      "kind": "transparent"
    },
    {
      "address": "0x88Ef5A3D47A71A34546b68931541b0b003e3cf2d",
      "txHash": "0xe5b2993a5d4eb48c62b43f423942a0eb0901e733894a2f900635b72878ac97b0",
      "kind": "transparent"
    },
    {
      "address": "0x57Bc7ae49c7A36b267436520D3D995513C972841",
      "txHash": "0xe5cd8a044f81e6e9aa8d4fb0404189ff0c86503672065fd48e893ca611764880",
      "kind": "transparent"
    },
    {
      "address": "0x92C031C748E9E3fFCE66c22736bE424b15564E5C",
      "txHash": "0xcec82c2554ec3fabab484665478fcd7b39cb9e06266b760f40c13196e3289d19",
      "kind": "transparent"
    },
    {
      "address": "0x6E3594a8F251b082b82F0a62553D75215901EA19",
      "txHash": "0x9e1b041c83c6b7c2516ada695c0916ea339e74bc3c2220bd325b0f3a7f0bf9d0",
      "kind": "transparent"
    },
    {
      "address": "0x582be797BB76BD1bF73a249111ac50A5d0736848",
      "txHash": "0x5ae43d49fe7b4922d366f1fd2e47bd3cf67c4137562ca854add73bd76584d30b",
      "kind": "transparent"
    },
    {
      "address": "0x936a410948E4a5684c099a255de539a417F58622",
      "txHash": "0xc90eb0697bc985f13eb74e80f4a81459a0aa6218ce24621b176702740a0a548c",
      "kind": "transparent"
    },
    {
      "address": "0x35baa357c6e5088f01B21F5e15478f318524F20d",
      "txHash": "0x3b9fa294c32be1c605e68fe749b392b4b32aa552a2124ee998087bffe60b8810",
      "kind": "transparent"
    },
    {
      "address": "0xCf0CB2b2aD69837287a4a2F7268114f3151f438A",
      "txHash": "0x35596cd189fb4f1f76d0fb338ff6ed6a6d49667e7c12d6427436e994fcd4aeaf",
      "kind": "transparent"
    },
    {
      "address": "0x579F5084382e703064fccEFECDb05D28E0e409c5",
      "txHash": "0x9aa6a8da79bb8c5e62536d49fc4fd3a64499620d1c6e741045d2f471f850d1a3",
      "kind": "transparent"
    },
    {
      "address": "0x828c04B5955E151e9002aA5dC1Be5c81eD067c7a",
      "txHash": "0xcef9cea17878c6d337d998ab14cad90348b60e9663fce20be4bf6934a4c80b9a",
      "kind": "transparent"
    },
    {
      "address": "0xaA6FDA91A889DA876edAa39F80D75BBA60FB78fB",
      "txHash": "0xf8278d82c43c3e9651d493405496f333810fa76558b7bbbeab9bc255e43eff2e",
      "kind": "transparent"
    },
    {
      "address": "0xc7cf7190c8cbcd7914ADD1EcFd30456DBe2a84f8",
      "txHash": "0x62628515fe3f38682c0fddf20c515952f359f84d36517d988382e16ce730b0d5",
      "kind": "transparent"
    },
    {
      "address": "0xEF8cEC42253F3dbe627798571823577Ba7885542",
      "txHash": "0xaa4478ff58f58aa94abb60bb28c3032b521adc5e19d8d0b60f7c3f4e3bf7daba",
      "kind": "transparent"
    },
    {
      "address": "0xC3C7c1395222AF7dA383628d3Baec39f2053a1Ba",
      "txHash": "0x11e0a56f063eb3978d506a13ae461da3058881935c42cb004d19f18a8710e473",
      "kind": "transparent"
    },
    {
      "address": "0x623AAD2e92A788CC5f876FD73C2fD8829D2D86e5",
      "txHash": "0xf6298e837c412fb4dc8c16fcf65d2084003591b1ccb3d817eea4decaceef1b9e",
      "kind": "transparent"
    },
    {
      "address": "0x2a8350264DBF190b852F73d37df07174B4219Ce1",
      "txHash": "0x1bd1c34fbd6232dfc7cc2b9f5594e5abadd6c37139240ee14c0508678550b43d",
      "kind": "transparent"
    },
    {
      "address": "0xCC92622A70F8a4B99fF5A175b59d557822Cac73F",
      "txHash": "0x74249338fb91cba1cd3af495c8b395180ffe35a031a36e7a12700f22222ad4c6",
      "kind": "transparent"
    },
    {
      "address": "0xd72D1c68513801c0343c82D33F4f7DF1c0556c52",
      "txHash": "0x65fac9b45f6eab33c3ee0460f7047c3339c312fe825c4165646816f68946ef3e",
      "kind": "transparent"
    },
    {
      "address": "0xbA9fF4A0508D498DB01db028519bC64b835FD1CD",
      "txHash": "0x615f80d47d42e7e67d03dbc9792c8d122af27ccb375dbeae6aa7b52618a2d433",
      "kind": "transparent"
    },
    {
      "address": "0xcB0604aDFc86665f7dd557C1E06237d7Ec45DB1f",
      "txHash": "0x9fdba623225413f5faad2a9feb561ea411775883e8bd16a15c0336ff96fbadd7",
      "kind": "transparent"
    },
    {
      "address": "0x619C9B3Db71136b56A884540B500f42449B57e4C",
      "txHash": "0x547919c1a50e679036417b8344ad1a03df3a49765d91596c43845605404ff5fa",
      "kind": "transparent"
    },
    {
      "address": "0xf836570C516d70E69c5c4DB3957199E6b69f8C77",
      "txHash": "0xda4e5560b49e49934827b85d7be2537cd7a5899c88c12dbbe9365c0c3b3583e4",
      "kind": "transparent"
    },
    {
      "address": "0x2ff3F637203Abaa430435c803Fa69120C330c1cA",
      "txHash": "0xce9a2da16b26ba97978f3a0afe2aaa5d6a55ccc0832d240f6340d883f6d458af",
      "kind": "transparent"
    },
    {
      "address": "0x8547148073784D92D0A99A6b4B6a96CCd12dcaEC",
      "txHash": "0x66f20024507a8843c7b5d02bc9c970a23f28c2a77e670af925ba364b3ab6e7d6",
      "kind": "transparent"
    },
    {
      "address": "0xD3f4f9De1f587f4D6DB20DbA6b2849124A152497",
      "txHash": "0xf2bd9f8b3e01e8166ad02f3e4b13f471f028b1ca78dc596d3eec780afe304e2b",
      "kind": "transparent"
    },
    {
      "address": "0x0a28FCcFB2dD8a1606a79208084813d9ad06008b",
      "txHash": "0x6bdbe8692572094f0043a09fba6c36540b365488a1b335fd35ca8d3c9008cadc",
      "kind": "transparent"
    },
    {
      "address": "0x8fAC8b968B5ba9d8267e2957a371aaF5E1caF33f",
      "txHash": "0x8c972cfa8745eaa1282f03965bf934ce616592194bf966ce6134071c3f326a2e",
      "kind": "transparent"
    },
    {
      "address": "0x6E568c4fD336a3346175E23bDA851c9303CBBC54",
      "txHash": "0x712c3270ff34a8f6715bfb244dd13618e7ec89d36463e7a3dffa710385cf7c43",
      "kind": "transparent"
    },
    {
      "address": "0x0e1EDF67D841e9dbd1cd75057dCf49cffDEfd2D7",
      "txHash": "0xe1d1695e25a4f9cfebeec1671d1d953eaaec5ac7868b38e11ffba639eb95d656",
      "kind": "transparent"
    },
    {
      "address": "0x26c23A2d3c8d79b26223fc2B284C38fcF2467AF2",
      "txHash": "0x6a68879e2a0f405c471a0d097b97a878b1208c78167ce4f219f1b96d6b4c9e64",
      "kind": "transparent"
    },
    {
      "address": "0xfeC58926b08E21E99Fb510817A7b520fcC33cdac",
      "txHash": "0x2f9da3325d0429fbec3540be99764194d85f979f98cd0302fa8fb139f4519ace",
      "kind": "transparent"
    },
    {
      "address": "0x41f8913539693a46781F4FFeA657FC93f5cD5d45",
      "txHash": "0x78b81b06f538644913e06bc001ee5b15cd5d47aa42481a2f79400e75c8c0b9df",
      "kind": "transparent"
    },
    {
      "address": "0xa0A4CD00478008fe9F4664712ec91437Ef1FA424",
      "txHash": "0xabde5cbf26722288c5264ee7d67e17d6f1ea43c1388ab6f4d3d8e708a6b690b1",
      "kind": "transparent"
    },
    {
      "address": "0x265316c544C72B9D249c56BcF275b8491F642ac9",
      "txHash": "0x4ccc7d3c12cbd8b40497cb25e822798a3a921eb73a87c78f7e4f32fb592ab132",
      "kind": "transparent"
    },
    {
      "address": "0x84b2a2E2E5C90a28123bd9f89347AeCec907a881",
      "txHash": "0xaad9b4c208d543b9754bd4970f522c70372c4a1e5e183d821aec10f09fba7030",
      "kind": "transparent"
    },
    {
      "address": "0x97f7AEAa2c217FFF78554A22b05A8CfF4EfaF6aC",
      "txHash": "0x7107a53d9b78188f684d9039d6c585289c7f9a5a26ec30a86d0592d797b82ce5",
      "kind": "transparent"
    },
    {
      "address": "0xF3dec944012D77cAEBA4AC90A10B23443367EC53",
      "txHash": "0x047ac300576cd1991160105078b28fbbf70ca56d9b869e656e412e6147161101",
      "kind": "transparent"
    },
    {
      "address": "0x6c70eA23710547911f75A976fEf7781eC46FA823",
      "txHash": "0x93b693e4cda9274e9e00585b2e12a288d0a1b1550a1f0aad96160793fa068ce7",
      "kind": "transparent"
    },
    {
      "address": "0x65a0bcB031D0Be933542869319CDa4E227644dd4",
      "txHash": "0xc2131e95d14f6d737824246bf78504165eee67294f7e54d42de30850fa75f2e3",
      "kind": "transparent"
    },
    {
      "address": "0xD078B50952166B91d705ba72eA1a448aBfB9A055",
      "txHash": "0x707c75e18328d3ecb9416d7c3534141dc59556eb2ce74b5a5ec5a48f4963e3e9",
      "kind": "transparent"
    },
    {
      "address": "0x685934eAeD0626D1CCA957d3b47341dEFAfB5Ebc",
      "txHash": "0xa4eb7a0d0617333f14644b74aa02f748c91b239a5c20f94ab5e11f5b4c93755f",
      "kind": "transparent"
    },
    {
      "address": "0x5ba22904eb584d5C81f96F74B851BA05afc6530B",
      "txHash": "0x641019672a0117fc9223d8e9d3beae55c7b610b67f95f00df2a35b866d978a04",
      "kind": "transparent"
    },
    {
      "address": "0x306eBfe2c6f523C36f8ce1eC5CBAadfFfF90209C",
      "txHash": "0x3b429653a700f3b0398e9246ecc68ce8deb7c451d68ba0310650624c7c01bafc",
      "kind": "transparent"
    },
    {
      "address": "0x5AF60bE6f093bC31Df31d8eABbacEB0Bb698eD36",
      "txHash": "0x772936a5b63c33a7d4040f213b29cae046d77e7706d8d0eae8c8a309b79a0df5",
      "kind": "transparent"
    },
    {
      "address": "0x5c82515e85D5c5080dc403988F23B98BDFF2086e",
      "txHash": "0x8770bc6766e98f8cff5853d476b7272c7e3198b143f15d5fadff00e5ff9fb081",
      "kind": "transparent"
    },
    {
      "address": "0xBcD6EF35C18144b971382Ef8f1c2bdcB4202F055",
      "txHash": "0xfc0e358689264aa0b896c88c641eb558c7846b4c8496911b9763acc3feb8b387",
      "kind": "transparent"
    },
    {
      "address": "0x10Ab1DB21072B1326c611E50163a2F922E373dd5",
      "txHash": "0xbae242c1dfc434127b8cf832418724a97cf2823c32938a63cf5ab3613a0481fe",
      "kind": "transparent"
    },
    {
      "address": "0xF791C5536832283A8c1f1731876a41030f756fAF",
      "txHash": "0xe6a1e4b124207d90e9531b13fd8f053d41172ce679b45f5677f677bed3f0d5b1",
      "kind": "transparent"
    },
    {
      "address": "0x749BA222967781A83442366EB32b3DEF347B8C97",
      "txHash": "0xc0c7243dcbcec68fc71c28ad23aebc3e451e1c59c8619b5e3cd86ce55a8fc937",
      "kind": "transparent"
    },
    {
      "address": "0x0a9c239Fbdb00Da51738287275846e894EE570E5",
      "txHash": "0x231d0a2e8d64cbbe8e0db49bfe299520ef9da9af656c220618a73ee0aa4fad4a",
      "kind": "transparent"
    },
    {
      "address": "0xeB2181b4708874Fe430986628587aF2C37d304F0",
      "txHash": "0x2e59e07608026ac2b6b641971c9263fcd4d317fd7f381f14cf745ca9baca879d",
      "kind": "transparent"
    },
    {
      "address": "0xa2a775f6313142162bd57FdacFf846933ac18Ea6",
      "txHash": "0x14d9c2c89465597f8b056cbc158c2a67afbf62b6546ae87572d4c8402fe79d66",
      "kind": "transparent"
    },
    {
      "address": "0xc5c76EfF8ec6478A93840aC4795803e0FE6D33d5",
      "txHash": "0x2864cc689785040bc9f954aadd32b7e3cb2efe40076f340436da056d20639606",
      "kind": "transparent"
    },
    {
      "address": "0x8FA36fE6E87ACD671Dfc4Ff6E7efEA055e9a1cf1",
      "txHash": "0x44dd9e3283c6fd239cf943149aa0c50ad02e63d9f123172d7384b8c694c2a825",
      "kind": "transparent"
    },
    {
      "address": "0x38f8A5613B2b711D44eD55Bb605a0A0D7FB4CfA9",
      "txHash": "0x777dd9af178e4818636eaaeb5de01ce60ce06b079afcf24bc546cecc651fa8cc",
      "kind": "transparent"
    },
    {
      "address": "0x16e780808FA69cD58f74B5295067DC60633AD03D",
      "txHash": "0xa4cad80e65767ce2ec5f8e05db2b1921be0704f08bd5c608bf580009bfde0516",
      "kind": "transparent"
    },
    {
      "address": "0x786E6eCfba76f52c397Ce91c9A4e212dECE11377",
      "txHash": "0x2fe3cfcf6a36a4a91026b8cef48a9a5f87635bf9fe153d2bf8d0ded4f7d602f9",
      "kind": "transparent"
    },
    {
      "address": "0xD4039A7B5bF959Aef8acF77F76528D6C4Ef7Cf59",
      "txHash": "0x4ba300b4d9eda3f494cbd98e5d84e093958b61126ceb3f7d532553f6a132686b",
      "kind": "transparent"
    },
    {
      "address": "0x0c29D69202e08e48ef163FEABE7428E06E6A618B",
      "txHash": "0xff94166f35a035699755fddf2c47bc65969edd03c87ab2f8f0c7052c24bb4124",
      "kind": "transparent"
    },
    {
      "address": "0xAE8c04D69DFe3dce37C2054Cf1Fa7747Feaa8c49",
      "txHash": "0xa7864aa6da6e8658839e803f4f82e60b0e7f0b843392cc052af75a854572d1e3",
      "kind": "transparent"
    },
    {
      "address": "0xF2C10C6217f27848ddD48fAf3d3e1e563DF88E6a",
      "txHash": "0x0c1eb3c3f096a929d7f12e6a452cd787023d9723e994d4792b2f4566dec906b1",
      "kind": "transparent"
    },
    {
      "address": "0xebb88E2798Ed262062f31678cc7Bf4823030D9E0",
      "txHash": "0x1cc5b5a53f6ef8998f8880f362388fdd5a6f85ad807acc4a4f2c46701aaf25fd",
      "kind": "transparent"
    },
    {
      "address": "0xa947e6A367768362a0FAbeabFf95C4997CfdA747",
      "txHash": "0x1275ed0e232cc97becc78593442b06a8c89ddf0bd3f89a720c5237b3710f4545",
      "kind": "transparent"
    },
    {
      "address": "0xCDF51b8C4354a6AccfF0622df463bAbbe418070E",
      "txHash": "0xba5047e88a14b52184dc88979f47c16cae6db63fa9a04a9f1f9ef5e538b0e8b0",
      "kind": "transparent"
    },
    {
      "address": "0xB1Be58fAdBAdc2bfe481C5f16C134416F9B3bDd4",
      "txHash": "0xd22914abcb8bfe367a4922e1b25f135ef3a164d410269bd2b3d52f3419a68497",
      "kind": "transparent"
    },
    {
      "address": "0x57bDF85b794ac5d077a5Acf4b7a5064a6ed6a005",
      "txHash": "0xcb5da69a19ad2413d3996e6ad3e5197ecb649b8155d83b81879381c8b6d02494",
      "kind": "transparent"
    },
    {
      "address": "0xFEF20e53853de3153c63eB996B108fD4633f6863",
      "txHash": "0xe4b8e565f1070a59c12b3ce635b7743c3396a2f7f0284ac900fd406063d9d1e7",
      "kind": "transparent"
    },
    {
      "address": "0x88d3Cd0D745f77753062de294Dd217E44f78266c",
      "txHash": "0xb24e92b99e469cab2779f2ab660e98e5d3776a49c7d50631a63ec54181b7362f",
      "kind": "transparent"
    },
    {
      "address": "0x7d7Dc59A3559dEc21499584157DcFE1202Be6870",
      "txHash": "0x5b8cf3806907cca77a8ce4414582a69879d60d7586ff31a6d53adf2534a5c2c3",
      "kind": "transparent"
    },
    {
      "address": "0xFEedbde918B4664aFF324fBCBc9a4871746E2063",
      "txHash": "0xad0e849c579215206c1ba0ed5fc5b631e6ad050756192791eb4b2efd2f809e21",
      "kind": "transparent"
    },
    {
      "address": "0x25953E8b51a017C5504D39C4127EabE9b981Cfee",
      "txHash": "0x4fc1deb40d39d5d5e19d531be2562ac8ed8bdd0a0a24911e3fb51cd08b669a03",
      "kind": "transparent"
    },
    {
      "address": "0x9207E0f8bddd30766427cBE66AC9e8Be5A214C7C",
      "txHash": "0x4b7d9a87fa6e2b2eb2828ee9ccdd7da34233e8dc2e4cabe58de2e97b4b56b896",
      "kind": "transparent"
    },
    {
      "address": "0x562a7637355Fe64Ef44dc9f51Ce327BF51E3ABB3",
      "txHash": "0x0195e7a3537d50fbe6cd3e9ebc1ea566b3f42e070cdc37a716d87f43ad915d64",
      "kind": "transparent"
    },
    {
      "address": "0x6e068dE76a44576d00782712C9D35d07E1fE87D2",
      "txHash": "0x1b514bc3099b6787910c0e4055704088833de5fe6006317e77455df490ca13ef",
      "kind": "transparent"
    },
    {
      "address": "0x78Ee82c97aEa6BA03E3C0d1b8adC0526a912505a",
      "txHash": "0x6e70843b540f81c2dbb085007239249b329c3324d27594917b3d766a51030dc4",
      "kind": "transparent"
    },
    {
      "address": "0xD932e4b3306fE3aa167D43ffD900691A9DAf2De1",
      "txHash": "0x60b9ade1f026fc40ff64f5ad441c77a24f1f8a6f8dcb26258dd074354a8679da",
      "kind": "transparent"
    },
    {
      "address": "0xeBE6C748774f401c674ED053DD42d823390a0272",
      "txHash": "0xf165147c9f2cda0c1fa20797c898f993eaf807447033c57f47817a614da00c24",
      "kind": "transparent"
    },
    {
      "address": "0xaC260d8E73363BDcEdB51977377EbE945833546a",
      "txHash": "0x83acc86aa9190b03c6649139a73efc564b7721997343761f48a90e6f3035344a",
      "kind": "transparent"
    },
    {
      "address": "0xC6919587D7dd5228eC82Cb2da5992e4808dA4138",
      "txHash": "0xcca113f4e34b457360101922fd480e90911499982137e133fb94a5ba45d0b1f9",
      "kind": "transparent"
    },
    {
      "address": "0xA86A32568a1B40e3982573fcdc152267BA6ea24B",
      "txHash": "0x4015baf31e36fe29717d9b3aa5ff49a38c706dfabdc4c22002fd423f07482e95",
      "kind": "transparent"
    },
    {
      "address": "0x1a06F10681bA4162683aF3d0B920445828189399",
      "txHash": "0xd5881fe5e1b2503d6b16a3876234ca9fb9c747b90f809408af06c78f4ca864fa",
      "kind": "transparent"
    },
    {
      "address": "0xC653C8e1B220bB035D1F6a04AAaAcCBAD9Cfb542",
      "txHash": "0xdd0b2ee6612231408ad30900a4df2e276465488f6651fd1f19cf9bf0b411b62d",
      "kind": "transparent"
    },
    {
      "address": "0x5716Aff6183Aa8C2477A686354b164589E646f82",
      "txHash": "0x4fb1baa90c1d8995f5ec1e61b2002dbdbc5fb8a64ef0261c573082c382d4d386",
      "kind": "transparent"
    },
    {
      "address": "0xfdD9BF8481Fd5A523abaA06D6c8F8a2b9A674F2d",
      "txHash": "0x93ce8ac44b399afc02c48133b050f2e267e2436b79f97925112ed745f55dd0ea",
      "kind": "transparent"
    },
    {
      "address": "0x22855C81f561BFfAFD5dcBc0314ed797abB42AE9",
      "txHash": "0xfdf8a19464f796ee47b955acb189b1fb73d3d0ca44085638932b3fd6221c84b6",
      "kind": "transparent"
    },
    {
      "address": "0xa17e0889794dfd133536599dE21d7207422737F4",
      "txHash": "0xe72e0a2126223a687280f29f2fb2e5b38a4c69508e6fcf3c996678235850ee33",
      "kind": "transparent"
    },
    {
      "address": "0x0665B1153F5A0849374cF102E9c5103290d50fFD",
      "txHash": "0x7f9d835e47ac0318a344d6b28cf8c8b53befc8ee71ac973bd9d80c3023c60d4b",
      "kind": "transparent"
    },
    {
      "address": "0x6e2DE40a1a8Bb0E6578AeA9Dde08055d16D853Ad",
      "txHash": "0xe6a0226064c4b4c5d990c08b9037573fa020376c58b15a545828e537b36df473",
      "kind": "transparent"
    },
    {
      "address": "0x35B71584eFc3a5264475C0E83303A26770e4DaCb",
      "txHash": "0x07dab2aa797e4e98b38c9c4ab35645e2f523e1f8671eafa6d87f7a0c8243c203",
      "kind": "transparent"
    },
    {
      "address": "0x22DBA6aCD7e75b7F077497BA972cCa17D19B75c3",
      "txHash": "0x3ac45ab04cd3236de71b84821ca69f00f8c008edcbc3dca91b01e65e67771fc5",
      "kind": "transparent"
    },
    {
      "address": "0x102713b746dF071e589502F1F2567dC12FBBC6F7",
      "txHash": "0x776ca2f419a29d6cf435f8cd786cf59460dbb2be90d2ae367dd654caea0c85bd",
      "kind": "transparent"
    },
    {
      "address": "0x7a09045eFE4F16Cc4F2Ad4bC9dFe4fD04631D800",
      "txHash": "0x7eba204ef37b8d821faaaf448c73bb55fdd4568ea90acdad8882cf28ed08cfda",
      "kind": "transparent"
    },
    {
      "address": "0xCbf2716513D1330EDea58a808F317430a151dCa3",
      "txHash": "0xc1d2b8abc55a3907b446162c1fdfbab0b2a7720f32cd39aa2f384dc73806a7a2",
      "kind": "transparent"
    },
    {
      "address": "0xDF730c32428705F2C877B9A376d4AD4d730dbD76",
      "txHash": "0xf81e764a1bc888f1365361f90b21ea3708325c845f664b613b01e7616a3722a6",
      "kind": "transparent"
    },
    {
      "address": "0x3B1B87b872B505B946C42B8A13a1b1A0A53031d0",
      "txHash": "0xe862b7e972e2e3d70d864cc25e4de78e58f1811da294ce0d74c3d366e479c07b",
      "kind": "transparent"
    },
    {
      "address": "0x8C81Ea93Dc775B2121b688c6D7Df3Db6409741bF",
      "txHash": "0xc9eefeaf49113d066d530bd4401dcec543e1d5192404ad0d0e29352fd4fc91ab",
      "kind": "transparent"
    },
    {
      "address": "0xF1C0cB1C474230151613c650Fb2A184521142064",
      "txHash": "0x481e3293ddd2432009aa20ad0cb4619606c20fc9dbcb9360fcce12f239fc80b2",
      "kind": "transparent"
    },
    {
      "address": "0x32503BD6780a6E2b91Fa399Ec1E0dbA2eE89678E",
      "txHash": "0x688f9cdfdc1e2e728e282dcfdb50ebaa5fc29bb492cc71f16cdd2429548b71d9",
      "kind": "transparent"
    },
    {
      "address": "0xf516483150CE12208f92612546BB8719E4682ac8",
      "txHash": "0x669aeb878ab37af1decafe987aecfc3d55624cebb78076e0dd423f91d6894894",
      "kind": "transparent"
    },
    {
      "address": "0xD3E633FAD1e4a02CC03E0b86A95E8ab277B606bc",
      "txHash": "0x29abebd1130fab9f49e7407369cd2359f0b7a03144e2bd706550c56b7240d3e6",
      "kind": "transparent"
    },
    {
      "address": "0xec288023176Cdd772aF7125e5C1E70C940195132",
      "txHash": "0xa9628cf94d7f735dd190c3997a9be5d7948715031d21baef7214bfa3681b45b1",
      "kind": "transparent"
    },
    {
      "address": "0x61c8FBCaCD22a1a6c48390621db13bD5a4bEF9D4",
      "txHash": "0xee8cc7a2b23e7ef7771300bcacdeccbf9289c7dcbf90764d729feeec88ac0839",
      "kind": "transparent"
    },
    {
      "address": "0xF9B29A77b21e52655c0c9D15E843E49cBd8ce70B",
      "txHash": "0xe25f39164281d8b13c8ed4a21504f173a59f64cf007f08e1213469e046e01b82",
      "kind": "transparent"
    },
    {
      "address": "0x76f7a770Dc3D88e109BC63de57350d1578Ca1E4a",
      "txHash": "0x6916929a6604dfda6d8a3614c8fc59eaadfa04feb57e54a1a4e23d9d90dad785",
      "kind": "transparent"
    },
    {
      "address": "0x3881020610f8B1D3Dd32f957E2C01219717c523A",
      "txHash": "0xda56455ba99f3d2e35ce2722036fd3096df4c65aeb4fa07b80d99ad8648bfc13",
      "kind": "transparent"
    },
    {
      "address": "0x9F6fF9923fD32fe5490f991948537A4C0ff85df2",
      "txHash": "0x487741989f63b55c8e4019a3dc1cc900f685d1b207f8d5ba6e7203be3fd62ddd",
      "kind": "transparent"
    },
    {
      "address": "0x5C1fC2916253819bA041eD6133031F0998F22795",
      "txHash": "0x2517af200100abb415d3c82d28171ab4f2137ed637c8ac0002cbdaef7b2da517",
      "kind": "transparent"
    },
    {
      "address": "0x579E436181179B6F716a6c209FD0867007c128aB",
      "txHash": "0xbf7ab09c3fe9cf47846f6ee6dc70d04ca9f4e4648d59e665c0762ed9e1ccb171",
      "kind": "transparent"
    },
    {
      "address": "0xBA80eF59aD4aF582B670cA536D915f49404bCB2C",
      "txHash": "0xfc3de7eb5ef7cef2367d04258ad7a06d8071d9e656f41e9a2637cafbe10bdb5a",
      "kind": "transparent"
    },
    {
      "address": "0xcfacf1005CC0765a5E3064a289Bb38bC9A9f8fA3",
      "txHash": "0xf479f46076f28736da443e80c07098d1d2a56c1ef53e9d201379c32c84896d09",
      "kind": "transparent"
    },
    {
      "address": "0x372591e760Dc4527b30C3a41c893c9ef53086920",
      "txHash": "0x1c5df9e197fc36240ced366426af8605678a829bd7f0d00bb9dd3f252cc50037",
      "kind": "transparent"
    },
    {
      "address": "0x71120E9DA8a2570fB8646d21f250eb92C95488D2",
      "txHash": "0x99796adb30d06c52998db744dc0ee6a11e3bd058d1271c833b1e1bdc9c390327",
      "kind": "transparent"
    },
    {
      "address": "0xECD2E33D333d81726CAD273fA5EA615e7C6c0DA7",
      "txHash": "0xc2856f8f8ee701977ee56527a814d978f84594bb13fe451497c22245f11ce432",
      "kind": "transparent"
    },
    {
      "address": "0x439Cc7FB0d29475BEc6B9b9c376A21bb77e275A3",
      "txHash": "0x64b4931f815d265b3d652f4ed2d66e6c97fb9caffb6f8ab9a94fa73cb482dcab",
      "kind": "transparent"
    },
    {
      "address": "0x942605C1974962b9f4B0fb5d134b56995F546b1B",
      "txHash": "0xe7df0a04ccbda7ca37f7753e3cbc880d715fa350d9368cec40593aefd1263c08",
      "kind": "transparent"
    },
    {
      "address": "0x902DA5f28e2eb5B72CdaA4A53fb3ca5098372D33",
      "txHash": "0x6422f79b02eae8b8722057cb0df104d016587b86c5f90be48ef0ba29ce386807",
      "kind": "transparent"
    },
    {
      "address": "0xf1d1a8D0C5fD874cCE25E7A08bAbe215d6546738",
      "txHash": "0xa1060fd1090c3d6335e146c2536ae61f3595a00c412ec8ec131af29ccf38e67f",
      "kind": "transparent"
    },
    {
      "address": "0x72B5b6e6bf94bD1D50EF4dB7e13f18EF230F834F",
      "txHash": "0xcfcf191d488bd26698633f8925bac3f4f3a25d50912aa532c2a78bff7996eb57",
      "kind": "transparent"
    },
    {
      "address": "0xE14D349EE03bc9a5913809073eCF648dE0c4d160",
      "txHash": "0xcf141c3d10ebffe51e665c5d0d936b95a15be1c3f0d6a082c5191024e105ae8d",
      "kind": "transparent"
    },
    {
      "address": "0x55D6C6AEDf41fbc78E7Da155721e4997D63ca839",
      "txHash": "0x3de29dc7997a014b8cef43cb16c1d10dc66595cd6cd5503d40f500b660c50296",
      "kind": "transparent"
    },
    {
      "address": "0xc778207181887C34904c4ce102e7f4278c9D71bA",
      "txHash": "0xd9c265038dd102fb89bd48ac3f16f961fcde3957801725d707be9ee124d3a156",
      "kind": "transparent"
    },
    {
      "address": "0x84603DC5113bF509082982a39faea0fBc04186d9",
      "txHash": "0x9e0e396b4712833b72a3a533de53bb216c94695bb0fddb5a26387fbd0b31031e",
      "kind": "transparent"
    },
    {
      "address": "0xE8859d95B07bC7a145945e690E72FB5Fe1310Ba1",
      "txHash": "0x0a8c91467c40198d94a7534a0d8242aa8eab2fe5fb3390061eff1bbcd5755e37",
      "kind": "transparent"
    },
    {
      "address": "0xD7FBF6a08bAc3ab55fa83299C38f29Fe73A49A6C",
      "txHash": "0x1d2f87ccd3eaf0e048bed7db68fe204fb7cd52832674f7ec65332293713d3adc",
      "kind": "transparent"
    },
    {
      "address": "0x2BC2B2CA4329A6241027C2e4Bb9A1653b7177a2b",
      "txHash": "0x9ccbf95d0961e229bc2132316f0561deb2d3a9f62d0c7c1119c1c410657af7b8",
      "kind": "transparent"
    },
    {
      "address": "0x137b8AaB337D6Ddf079Fa56c4a024B2BD005692e",
      "txHash": "0x3edc855b863a891df8f8484046e151ac43d6af5068c8c55ec90373ade93161fb",
      "kind": "transparent"
    },
    {
      "address": "0xD90b94FF22747272d910483846bCA3BeC35027eD",
      "txHash": "0xd23d1c0e83cdd2d24acd70c7f869407d48cc6ac50b6cc7b6c0cf77030a8b869c",
      "kind": "transparent"
    },
    {
      "address": "0x1AA247db9064E45A96A3d8c1d606de12B2a88Add",
      "txHash": "0xd856087a7a3ea79a7387f8d0c8766a02c2bb5c9997e4f5c0deef8a75d89ce956",
      "kind": "transparent"
    },
    {
      "address": "0x932c41eA319633E13b297d35e0839a4AEb09fFA8",
      "txHash": "0xad96fa174f2f02b1c9c87d12207c7324aaf1d3c30e088bfb70f09c4c8e8f782b",
      "kind": "transparent"
    },
    {
      "address": "0x40ddBAad0C70305Be28a8b4B496523ca64476633",
      "txHash": "0xf07a886bfe0d14e04ebb32b8512365db0f6b58ffc8be46259f60edbe8a12ac6f",
      "kind": "transparent"
    },
    {
      "address": "0xe3C7e1CafD4A7abf97fe9b0e4Eb47B03424c6e90",
      "txHash": "0x881530d75b8f077b70e8eb0b2fb1cef6d5de49602fff4079a4b77871be5cd126",
      "kind": "transparent"
    },
    {
      "address": "0xf63564F1654fa884f25F0bd1446eE671FDaeba9a",
      "txHash": "0x295c8239699cb4fa940e6b83e0d162115da77fb54399000c320217acec3a1e7e",
      "kind": "transparent"
    },
    {
      "address": "0xDc2a159543D5055D24A0Faab4331E4F822486288",
      "txHash": "0x952158e4deb4127bd94b17523bc8c56845b7e160110d77b9348052fb263d2b33",
      "kind": "transparent"
    },
    {
      "address": "0xEFDb60BD4098255b1C37f07b94805Fa60aF12c6E",
      "txHash": "0x9215d85bee0764f783c81dc86fd5ce3ab8c761c09829f474be6dddf638eb70a5",
      "kind": "transparent"
    },
    {
      "address": "0x18831Ee60e5E9e8Ec171DfbD1afa4aFc8bf4ADeC",
      "txHash": "0xd972d973b4165dc83d892bfa89a935c46fcf4d2e1dd1264f4b3aa5a737adf930",
      "kind": "transparent"
    },
    {
      "address": "0xD9BB704C8DEb2f305502cba9c3982DEC4737d549",
      "txHash": "0x7bd4d61d44485163ed541793f5ef2988933e00ee10d4801f7d942e6c81004c4c",
      "kind": "transparent"
    },
    {
      "address": "0xa90494EAbAE9E76FdC4D43BA81F1d093e56EFe79",
      "txHash": "0xe61fb62c598a70f4332eab46636c4bd91ba50047900e2cb1941bcb8a4ddeee51",
      "kind": "transparent"
    },
    {
      "address": "0x703242B695238b74b3Fe90581146Df4a49f12F8A",
      "txHash": "0x7f5f7557474cd47bbbc2d07637527ce29dd5a515b929db83efde165e8a47b36d",
      "kind": "transparent"
    },
    {
      "address": "0xE0b5A75484d14eBE4052B4a6fc273a603b3F1d82",
      "txHash": "0x1c2c3420388aafbe257aa526c0f1dc3fe77cb79d0e422f10fc4d3bc159b5dd22",
      "kind": "transparent"
    },
    {
      "address": "0x0Da94D834a2Ad84F20545B29C4b11C69640fbdf2",
      "txHash": "0x0be6bce620c6f99d77c881e8118e06bcbd8c530508d903b4abfefa3d289c1f6a",
      "kind": "transparent"
    },
    {
      "address": "0x754f2df8A9613916Ae1fbB37EE47a6c2C252d7a3",
      "txHash": "0x368881c188cb3b8f5f711e2801bc69eb93bbc6a9025818decb991b6383f3214a",
      "kind": "transparent"
    },
    {
      "address": "0x450D653bF2c065430560c8F5E51DB7334ddB93e6",
      "txHash": "0x7dc08ae77e69333260dee92c0bcf101315abdda8517c8b29971d0c4b76233fb8",
      "kind": "transparent"
    },
    {
      "address": "0x4cEeF7D959ACDD1Df84f481cFfcbcDb582223d4b",
      "txHash": "0x373f42dc73cdd58b2fd7e337763c162f57161ce247582a346f2081af80bf438e",
      "kind": "transparent"
    },
    {
      "address": "0x032A287ec6791994c4E4f6db5cB73027e4a05A0C",
      "txHash": "0x6478d4f9fa4a276731e0818751f8b89d0d52d00e4677a88b29c3f4cdef4cb302",
      "kind": "transparent"
    },
    {
      "address": "0x067452a56bCc6252E119254a1B5F9155399486ee",
      "txHash": "0x92dd966898f1a06e54d04d281a4a3b6fcabfb7adc54ad4bfa07449327e62ea02",
      "kind": "transparent"
    },
    {
      "address": "0xa0545706e379C30B26ECaDE78188FDB78cb2162a",
      "txHash": "0x8634b8731d6c9cbf85290cf1f9098d5856c86346cf61196a61ad77ead49ae72d",
      "kind": "transparent"
    },
    {
      "address": "0xD187411151242113708D47d45DEC810b2b394879",
      "txHash": "0xd7245da1fc1b2b6400bddceb03d6acb424268f0fc5c9a446234d709b1e546204",
      "kind": "transparent"
    },
    {
      "address": "0x4A79248C0Dd0C30bb4c5bF989C48610Eb06CB8D9",
      "txHash": "0x4e869706fa46f85f78b9fae155bf7ed41ac9cbb55cb91d09d31c50b20d6b7220",
      "kind": "transparent"
    },
    {
      "address": "0x538B42d33F5DBf2E17693Ef7BCdaCfef18dF5891",
      "txHash": "0xf67722e126b707dcad6b087bfa8cf862809318c65ee6117af2f2bed2d7d8e522",
      "kind": "transparent"
    },
    {
      "address": "0x4e8CeB24C2a043ac22B4F03860B0E0A629184306",
      "txHash": "0xf5eb5ca2ffb8d6329b0ef5fa228424ad07d75d30258e17fa55b67ee784516f1a",
      "kind": "transparent"
    },
    {
      "address": "0x92d810bC4A71C1726B455bFEd1a8CF46aE3ca70C",
      "txHash": "0xdded8e483315f15d84c73fd503b55b384d99fceada8ef785de91e5b7c79b857d",
      "kind": "transparent"
    },
    {
      "address": "0x840C039c5a08b855Df1F7CDe395599044B71B103",
      "txHash": "0xb9832beed1b0f483e25400f113dbbdda85c4ac2d8b14f1abe3e399d5b1043094",
      "kind": "transparent"
    },
    {
      "address": "0x0EB4Ef4DC0535f083D3279E5A61a94D3A410Ed04",
      "txHash": "0xcd1530494fe9eceeb193437a7babf04f5ad1af7c8a185ccc47063d83f65490ae",
      "kind": "transparent"
    },
    {
      "address": "0x871CB21Fe7D6B0ed253ace411F70Ccf8869a7040",
      "txHash": "0xf0bbc3cd4820a25dcc39ca1487d774c95ccf7aa0ed00e38be2e4a9e791ba0d1d",
      "kind": "transparent"
    },
    {
      "address": "0xEf79c953Ca463FC642017E409D4C7D421bC69285",
      "txHash": "0x6b879924bd121a81900ac26afa76214447f697e71f078a710f02e66c67424665",
      "kind": "transparent"
    },
    {
      "address": "0x9aCC802d3069DC8947d23cF4a1Dd75eeCBA0e92F",
      "txHash": "0x2c2041c1cb0537755289807c0b0802075cff78fed07898e65522a44543e5d1e6",
      "kind": "transparent"
    },
    {
      "address": "0x82D3aCAaAcB592179527F60cC11f372E0c9ebbC4",
      "txHash": "0x25307c4ff8480cd65b6a8b551054ad13c18c80b1f1eac161844cc496adbcf206",
      "kind": "transparent"
    },
    {
      "address": "0x21037402cAe964185Ab46e18907fa13f79AfC973",
      "txHash": "0x7f98985943ff4e09472d2cdaa918d5fd5329a49197cb1111ebaab3b351e175dd",
      "kind": "transparent"
    },
    {
      "address": "0x424EB63f3699533C87Fef70662662Ca954eAb85C",
      "txHash": "0xb3c4bc1b80566e02fd19304870815b2c4f228b35dfb7e0bf276ca7d8e5f2c9f6",
      "kind": "transparent"
    },
    {
      "address": "0xAEc41e4BC3b401fcEf009aEECCDcD138f61adB1C",
      "txHash": "0xba1338b2a169d1524d61facafde0598131068e24ccfe7512d7621c629a31fdd0",
      "kind": "transparent"
    },
    {
      "address": "0x72d4135ee7B189239a895D38cd88faA7b0741049",
      "txHash": "0xa6e863d84cbe6eb34ef3c8b34ea64d0b11ec7001281d1d0ca1243204c70b69d7",
      "kind": "transparent"
    },
    {
      "address": "0x2B978b6296E8312C2F1dc4E0c0C3240d44C340D0",
      "txHash": "0x0c92f029045a2b93b9f698a37127c99ab85f85afa75caf137f67b522b6d3b3b5",
      "kind": "transparent"
    },
    {
      "address": "0x8a655796788AD276e173C5f3b451cb3090b1A399",
      "txHash": "0xe5477c3af533cf62590fce3ab0b9b9a59e458015c436cda002983711af9b8e9c",
      "kind": "transparent"
    },
    {
      "address": "0xffDa94704581e93F1eC886C24D8a31f981c9fCdF",
      "txHash": "0x19c1f7eeec39d041fbaf6265b97c8932c52fa35828da7a6d05bc24feb315a0fc",
      "kind": "transparent"
    },
    {
      "address": "0x7a0E396046006786f36a38f23fD35b961368e032",
      "txHash": "0x14cc22ee05cc07ff2809dd32b18c6c9817b11a75d6e811106b31348e14312c3f",
      "kind": "transparent"
    },
    {
      "address": "0xba06D1C9e1866a9136F68CFe9D0B27e931E574Cb",
      "txHash": "0x83bea9e9892802b05ac003f21e731d383af129fb82010ea623650f55ae6a46fd",
      "kind": "transparent"
    },
    {
      "address": "0xc901bF92a65D2B046B76D50Ae794AA6229522d3e",
      "txHash": "0x049f1cd47c4412fd7ec7888c8527c368fa6d692c688137c84ec526e756ea1ed8",
      "kind": "transparent"
    },
    {
      "address": "0x5f2baf6eE67C10523Da2263b49D22f5690649ec1",
      "txHash": "0x0dae21447b5d322606cf7ba8f4e59649d10f040dc62301e0ca610868f4d65b6f",
      "kind": "transparent"
    },
    {
      "address": "0x3cE0b141dF8ac59bA960e058F3E7eFB5888c606d",
      "txHash": "0x65c21901941f157dc837a126ea14396b8b22eddc6af2805b86eaff4f0dcae227",
      "kind": "transparent"
    },
    {
      "address": "0xfA8364105BB1B4b33807594BaE361B1D7cDC9600",
      "txHash": "0xdb9d100352687bc3736cf6574f508588348f27cf7bc58e85a54a7020fd0b1785",
      "kind": "transparent"
    },
    {
      "address": "0x75E8DFc4C31C72528F30E80Ca3eC0b72D452DdEF",
      "txHash": "0x2e90424c99d5ed3a1e62bd96628386dea12f2ddcdd613d644618852648284726",
      "kind": "transparent"
    },
    {
      "address": "0xC36Fab7D89C1D98686F396346186b8c31b4c6B64",
      "txHash": "0xe2bc65a17f89ee7e5a4ea67c1d86ba674b16d7e05c75f4b72688b9bd009e45c3",
      "kind": "transparent"
    },
    {
      "address": "0xD7Ef84778D94Adad4A0a1cAeC8F6B2463F8bF6C8",
      "txHash": "0x38eb4558e02790c1f75c228e7cfdaa6482d762cc7b436b30923345cd717b232d",
      "kind": "transparent"
    },
    {
      "address": "0x3eda531D344a4CfF2fe201407F4C67e38c1f2b85",
      "txHash": "0xcd97ff8bb5ecf0f64b1182d3e77c7c64aa317853076255b753cd019653ba3619",
      "kind": "transparent"
    },
    {
      "address": "0x3b1f821440a1dc87c7737ea8c7334A457489B87b",
      "txHash": "0xa568052fbd7848947d5e0b0f8510e50f0870a9da8ecc4cc3461e332764ca27e9",
      "kind": "transparent"
    },
    {
      "address": "0x7F0d733E07b36034851FF1fF83A36c650C27cE12",
      "txHash": "0x29c74fc7408a9b6aac0566c823959ede815467a3346bea5f1ac9618caba108ac",
      "kind": "transparent"
    },
    {
      "address": "0xc43500f9264FdDcf72cB6FC845E18b7CE202205F",
      "txHash": "0xbee79e12600401ce5c9683662c96247025d2fe6b499a1b23024ad679fe028d18",
      "kind": "transparent"
    },
    {
      "address": "0xa0343370858d4B1736B8af3Dcb149b975c53608B",
      "txHash": "0x78ab25571b8cc8bef85a10c02f96159a801cc5bef6f096d97f603eb05390d468",
      "kind": "transparent"
    },
    {
      "address": "0x694de51e480c89eB4628522c5cBC3F1940145DF6",
      "txHash": "0xb1762d56ef766a8ba9b29a0d01581e3b982ad133db4b83bb7a854e6050d58ef9",
      "kind": "transparent"
    },
    {
      "address": "0x69108B8659bA6e2Daa38e484eC98491bf1048519",
      "txHash": "0xfb97015734601c291567e0d5acfe6460cdca6fd451982f2c8546111d85fd720f",
      "kind": "transparent"
    },
    {
      "address": "0x8c6d7E4780f50B41604813Ca37cf4f5B0578fd6A",
      "txHash": "0xd83e70bf7013631ef9402639650e4ba3501e83a2c5c0e7fdc5b5d9774220a00d",
      "kind": "transparent"
    },
    {
      "address": "0x64b4aa818Bdc014C74138f3E410f48C7d7475F41",
      "txHash": "0xc602a36c0875c369e8a06a67644cd3d5df5128c08af53c6f10e81366927573e4",
      "kind": "transparent"
    },
    {
      "address": "0xD5fE97263B94E7dB6de8367671eBff7f5384eAbe",
      "txHash": "0x82a27b352e5e438fc33b39d8dea8f9c177d15abaf1cc1fadf63ff1348f53d39d",
      "kind": "transparent"
    },
    {
      "address": "0xc5FE9587Ab6a21f59b08c42A0f44D27610F0BFE1",
      "txHash": "0x46252d5e97c63627fe24de64330bb7effcdc058bd56d3ce67c52dcc6fee69657",
      "kind": "transparent"
    },
    {
      "address": "0x0b1921bA778849fCbe595ecD159B81F914EEf270",
      "txHash": "0x09c40a4162f4bcffed686ab1be0a12952245c3d832885fbf05266b1844f6ff12",
      "kind": "transparent"
    },
    {
      "address": "0x79FEAB1263b3A909A91771b811be888c3C7FE1ab",
      "txHash": "0x995e75d79a8cebf9fafcf9a4136482c1fd904589aad743fe3aa317b67d3ff75d",
      "kind": "transparent"
    },
    {
      "address": "0x2112BE146141258A9b3F6230638Ecd5f0b84C7e9",
      "txHash": "0x325cb25be5465dbe683076f623c9c36fb222f441db0e7daa0fb4d21df1400074",
      "kind": "transparent"
    },
    {
      "address": "0x355364b7c4C9480EDfAA1fC41bd4323486c5A0C4",
      "txHash": "0x517a85345990efa26e638339eb89e12f4cfad94adf543b177aa89d13d2c47be7",
      "kind": "transparent"
    },
    {
      "address": "0x09b507D23586012164980fF5f1E74Bb7f4262756",
      "txHash": "0xaaa93cf76202d64205862c96c8ec2130edb67b5f64fa134dd13f158edddce620",
      "kind": "transparent"
    },
    {
      "address": "0xF2eF06388399fc756fCC28Bbe44E8AD471Ed71f7",
      "txHash": "0x4794569ec70f75f70906a114c8b49b58dd40a93bd2a307df6bb401ea8c70ca70",
      "kind": "transparent"
    },
    {
      "address": "0x34B776558Cd809fC201bB10A74a51C6DAdb7bDe1",
      "txHash": "0xc01145a0afc742654e83e6b24575456e992c1e6447fb754c2426bfca1908eec7",
      "kind": "transparent"
    },
    {
      "address": "0xc39A3abCD4D22563DF2988A715650aAB04D55Ae8",
      "txHash": "0xdbdde3df9075462d1b57b46565a00dd28ac18a80b58a6f5745d578a37b718bda",
      "kind": "transparent"
    },
    {
      "address": "0x7F29960e3FE3f84B3D55A3A20C17DA4e6059bA26",
      "txHash": "0x4c8596e16d7c0f78b79f367ee13697c09fa4956ab477ad72285749899aa8ede0",
      "kind": "transparent"
    },
    {
      "address": "0xF4b2871a89fFe23d93CeE1c4280a6689B236d231",
      "txHash": "0x59ddcbe7229fc818e28cefd21f849c6a6d0355d7dab3dc3c500d0b149a178fb9",
      "kind": "transparent"
    },
    {
      "address": "0xa492cD9617f0b4Eca2d13807d0128c303c88c42e",
      "txHash": "0x30d3dd510d10c091d583b21ee2e56f88bdb5efc3e0472dcaf1d3df4561763aee",
      "kind": "transparent"
    },
    {
      "address": "0x25D723816d837162ce0c360375b537E97E8a773C",
      "txHash": "0x68ee6efad6730ae13e5bdfbdb55a657cd4fef1a056cbec9c54fda0d076ce5e14",
      "kind": "transparent"
    },
    {
      "address": "0xe6A08462161968Bb69758374494130259d6e47b3",
      "txHash": "0x546b5fce4a1e42f7232bf4674ef9336fcbb64a232c26080a319d7527b3c4bcb0",
      "kind": "transparent"
    },
    {
      "address": "0x2c88D9E181ae7F9Dd5F6A2B2c7b4BD610Bd5Caef",
      "txHash": "0x66f5a3a0b90bbe276789291cf4111484c525fbd0f1c0fe1e1017d4835ace3a54",
      "kind": "transparent"
    },
    {
      "address": "0x66215B4938c8031d539d9177d6991483A7cF8e33",
      "txHash": "0x03a679bef10e042353dc16f65fe315a7cf30f23f166b7244951d937bc68dc1ef",
      "kind": "transparent"
    },
    {
      "address": "0xaB0449d08A52C5b88F37279Df637F79aF221bbb7",
      "txHash": "0x5edca7fa0eeb13c9d3dd7e7ee40a69287ab78bd8d6ebdbbf0695d4724a53b903",
      "kind": "transparent"
    },
    {
      "address": "0xf6B47A992C5c10916D8aDB83c5006f4c4FeD36fE",
      "txHash": "0xf751f6fda3e5391ab2476f136f12860df14127500dc157ceaaeb83a40dc5d5eb",
      "kind": "transparent"
    },
    {
      "address": "0x4fb2480Bb1347923a4d3F17Ec21450D963827E3f",
      "txHash": "0x1282f935bd7c99bf21d555a087f354f1aba8858820baeec83a2652705ebd97c4",
      "kind": "transparent"
    },
    {
      "address": "0xea3c3135DCa913A41D0b8ab36cafCD204c632869",
      "txHash": "0xb8562ec2ee16f637ae18673967fbf27806fbecbee27b38f78459ee5e6ea250a2",
      "kind": "transparent"
    },
    {
      "address": "0x06B3797c18759a24A3382456B4Fb8d4B6C3D4eEB",
      "txHash": "0x31767f7bbeb36df08c55d34410cef74c302352961db04b03dc6db412b70cc31d",
      "kind": "transparent"
    },
    {
      "address": "0x7da331D92C3371ce14e368C073EdbB164Aa10864",
      "txHash": "0x5a9c94a27b2d4b4d6c5a86fd57f79ef796504a0b0ba5f2d95c84326742de55fd",
      "kind": "transparent"
    },
    {
      "address": "0x120700F2C1c342D03e46CD5E8937259EC3454652",
      "txHash": "0x8d996a401e6e717de36168d59e087880222b842a38d5616efc321965c0ddb45e",
      "kind": "transparent"
    },
    {
      "address": "0x70298235F3F6A90182714cBfEC6394ae13e21100",
      "txHash": "0x4d0e8b51254ef5f649c96576ea706513f18a1ca5cd8fc7c324bfc75c22ce327a",
      "kind": "transparent"
    },
    {
      "address": "0xceb83952C6e739aCb32C4ea645ee4B42BDcc63Ba",
      "txHash": "0xd9188156fd1f650842359d31e7c571c2a3686b8c36582e273c812e279289770a",
      "kind": "transparent"
    },
    {
      "address": "0xAB1E5487C476D7725bfc73Beb6E3EB0C501616Ce",
      "txHash": "0x26c64c0dc04cf72721f66c63da83edd2cf15e9c088ffcd7c0d48d32363ce2d1a",
      "kind": "transparent"
    },
    {
      "address": "0xC2A61Ab82e6a08F3AE06D4e206e9454023d23682",
      "txHash": "0xe3d2e205e39380d8e31e837e263e94bf4dfe7bc5136cfa70511778321e3d33e1",
      "kind": "transparent"
    },
    {
      "address": "0xD80f66125670D2d79Bf7B70436866A942860b0b4",
      "txHash": "0x98395da2eca1bb50a309f091650a95c50f4c7783ed37375c7418a581d83df92d",
      "kind": "transparent"
    },
    {
      "address": "0xdcdFeD9C8d41aACb426C796A9BeC0fF6f870Cf4e",
      "txHash": "0x818b6302d243068a3326dc1d651c16c42846c046ad11f6d1418d3346ea37b4c0",
      "kind": "transparent"
    },
    {
      "address": "0x7126C5a233f26a4F1c4089a9b973ac671a5E9384",
      "txHash": "0xfe57ee258eab0b46483413312ad9d05a6be08b2dd504e932be60f1fd0d3d094b",
      "kind": "transparent"
    },
    {
      "address": "0x4554033237a9231599DAd89Dd453099EbF04EAe8",
      "txHash": "0xef386a9342e60d397462662c53597d1ee9178760cc6525137a8f5b6dae70ca23",
      "kind": "transparent"
    },
    {
      "address": "0x4eD003f40aA1880D334b5c9821D545EcAAA310b2",
      "txHash": "0x8cae38cfddb32f9674ab496d143f6b3083a95c08b674532f0f7157a771bbce7d",
      "kind": "transparent"
    },
    {
      "address": "0xBbcb9493D93fC8785f9629357898A9e241936DE9",
      "txHash": "0x9d822085af2f2a28dea28c114c2eabac40f2071e64b3108391de41860ae8395c",
      "kind": "transparent"
    },
    {
      "address": "0x7B446D6f4387a5e40FB8Edd7165D2502809Ac863",
      "txHash": "0x1f973ddbc7946dc610476527561314b231c56e4f88b55cd8306a0d491da32db1",
      "kind": "transparent"
    },
    {
      "address": "0xb3fb26829b4413A6068C9df5EbCA3D3656bB95F6",
      "txHash": "0x2cf62b428e76dd1e918b6ed244681996ee55dc0fe0f2c4261a83363b9ef8d207",
      "kind": "transparent"
    },
    {
      "address": "0xe8b54bAe676fA02cA913a96EF48725Cd3A4FFC2F",
      "txHash": "0x4ee2075b348a1ac40ce923ca0def5da246f80268744657d4cf558c1466f3718d",
      "kind": "transparent"
    },
    {
      "address": "0xF27b2578b65F53e0C6366F21c7B882F48169a509",
      "txHash": "0xa91b0391948da5ae5cc765903a29236cc4b2fe787a18e7ca56e7a7660b9a202c",
      "kind": "transparent"
    },
    {
      "address": "0x3D2d99Bf0D7769c4Aa65707F0bc3B68Aa954C320",
      "txHash": "0x2614e15c4afcc850cf804ca03fe5e88e6d507285bc7303bc09b8d96aada3ea57",
      "kind": "transparent"
    },
    {
      "address": "0x75bc01463c3Afaeee3A65B8e1a15eA05b63427ed",
      "txHash": "0x8d988917d5a148475439c849196d47536f91a53ff3464d319ceb09da49d3bbee",
      "kind": "transparent"
    },
    {
      "address": "0x4159AB147fBd109776E25dC2c8111e9215C6f21F",
      "txHash": "0x11191b50eaa0291b40188f5ff522be37a01ace560636f36abd16d275a3d122ab",
      "kind": "transparent"
    },
    {
      "address": "0xb081D1CfCE5EFde1edB4c43308F54d44c3791a57",
      "txHash": "0xbd9ce72c785de332d0c55a979904a00717980dcb63144bb932c39e812801b664",
      "kind": "transparent"
    },
    {
      "address": "0xf719Ae0bBD17583C381a435dD941aD070dAAffdD",
      "txHash": "0xe631bd28610221220bbcbb7af32306636dbb12bd08386bc4f8b5cb8b7568ed86",
      "kind": "transparent"
    },
    {
      "address": "0x37a8D945D6e877b20fe121cEC04351384ACcf0d2",
      "txHash": "0x3efb80ed433da85626eb94d206334a8f3521781f40352435761c41fdb149a4f4",
      "kind": "transparent"
    },
    {
      "address": "0x974A3F9134A9050BF0CA50cB0c10ca7ac8308880",
      "txHash": "0xbf3fb155bb3a8dd5dd8908af12aab52210d0fb1651dfafda645c007129906000",
      "kind": "transparent"
    },
    {
      "address": "0x2Cdbfa3be85c18D7a54B2566c318A32eE2dce4A7",
      "txHash": "0x4653d0e3b0cfcc61120296bdf3468f8928db5e9a0ea9e328cf7342373de61029",
      "kind": "transparent"
    },
    {
      "address": "0x16BB5cB12b6b176845eFEf53eb9ACF8FD3aA761a",
      "txHash": "0xcf2459949e40c931d54249188216f757ab6f6ed19b6397faaf2334f472e2b7f9",
      "kind": "transparent"
    },
    {
      "address": "0x56Ff24CD799102b5c60B0930E148fC68Fc764613",
      "txHash": "0xaeed0cebd5c140aaa5de4862c39f4aea8f4c24e30c210f90c566601877a07217",
      "kind": "transparent"
    },
    {
      "address": "0x4331ed33852B6f1b3F9F8B8eAf18D2C860932EE0",
      "txHash": "0x470bc5bfb239fae83e2d0957ef7aec4f8b29eb94dfd0b5d982c705bd04b55b9c",
      "kind": "transparent"
    },
    {
      "address": "0xB0103F6fC07C0714ABbA13cfa2DF873f18FCa7A4",
      "txHash": "0x278f0f8d6545ed66e938769428ba362d91c0880c53be2932bbd241b27cb84d9a",
      "kind": "transparent"
    },
    {
      "address": "0x03525e560eC0Ea450c47D2f6Cd2748500c6643BC",
      "txHash": "0x39aaabc1737bffd692b5f340862c0dc9dc8879db6896cce8748eb4520435a0e6",
      "kind": "transparent"
    },
    {
      "address": "0xE6B854cF1769F9f4d3cfC61232fb1561CE23B752",
      "txHash": "0xc92e010c7ca70b56a233dca58271f973e37280e272c514924df4c2188b4b5892",
      "kind": "transparent"
    },
    {
      "address": "0xbd028e2FACbC2F462613387ABfa7F60b71Ffe22a",
      "txHash": "0xc96a075638c950c495b193cae1c4158f5e822a0769868a33ded62d4345a1c1a2",
      "kind": "transparent"
    },
    {
      "address": "0xD8246ed3bCf8BB169aEA0cfFBEf9C37568371F3A",
      "txHash": "0xef7c8e3931295a1a391c1edcf4f9eb0f950f8b4e3b8638f1c51be37490fd430c",
      "kind": "transparent"
    },
    {
      "address": "0x7030b11502E357a9C006A2E3100A4b6cFE12bc65",
      "txHash": "0x929154db6489d3545d7d8e8355e20efcf1eaf038e1f0de02aca5e86a98e74fa9",
      "kind": "transparent"
    },
    {
      "address": "0x6eebDCB8D01a574e8C1DA6E1a15173A16DC7629e",
      "txHash": "0x32dfffdf33817536510c4000d7f822536c4df63c5500d5c309fe9ed48622a69c",
      "kind": "transparent"
    },
    {
      "address": "0x1F8a4B9ae896fF0a966605a5ccF83f2f73E0FFB6",
      "txHash": "0x5a09a54449f4abb5fd5cc37615536f47bfc405e8b385819f6e8c23aa108f57b8",
      "kind": "transparent"
    },
    {
      "address": "0xE6C4C4B178D7Fd984cFc20097da31F26493F5CA3",
      "txHash": "0x1e0d7ad417f54ff83b0365d5b1d5e666302021dc547e0c7a1e15c3f3fdcdb282",
      "kind": "transparent"
    },
    {
      "address": "0x777F925F835E0CFE8Fd1Cdc1fb8BEB47c2e32932",
      "txHash": "0x16aa104731a0b8145ac7172c76247a6c330b08f8d142d01e27d8b829b08788a7",
      "kind": "transparent"
    },
    {
      "address": "0x7360968579A37729EFd807A643E686EccD8E15c2",
      "txHash": "0x183142326a55c8b63fc5dc7cef6ecaa13d75407b6a19211599fa077d1c4f0aa4",
      "kind": "transparent"
    }
  ],
  "impls": {
    "e294fc3a796a1793327ab8b743ad8475837f116cf89b40b5718a8b79f79530bf": {
      "address": "0x4Df2f68349Fd9CAcC17e253b4c39320b22Cf6Ea5",
      "txHash": "0x1ffb86dc9d384be3479b9138b391caeff4e67de29fccc14f6beed43e6c9aedb9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Traits",
            "label": "bossTraits",
            "type": "t_array(t_struct(DwarfTrait)5645_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "dwarfatherTraits",
            "type": "t_array(t_struct(DwarfTrait)5645_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "MAX_TRAITS",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:25"
          },
          {
            "contract": "Traits",
            "label": "dwarfs_nft",
            "type": "t_contract(IDwarfs_NFT)5659",
            "src": "..\\project:\\contracts\\Traits.sol:27"
          }
        ],
        "types": {
          "t_array(t_struct(DwarfTrait)5645_storage)dyn_storage": {
            "label": "struct ITraits.DwarfTrait[]"
          },
          "t_struct(DwarfTrait)5645_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_contract(IDwarfs_NFT)5659": {
            "label": "contract IDwarfs_NFT"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "09abd3204cc71b2bd7ecd5a863779bcb904b542eb002bbc64ed059b0f2d7e52d": {
      "address": "0x92d8a433C8B4A2B84658B1E96b476B92BeB60143",
      "txHash": "0x2483edb77ae0a69410f93d37f67a0e5a5812c0f47055dfb7f5630a78c65a48d0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "GOD",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\GOD.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5a5df2191659a6f7f61bb8eadd78cec814126fe6422ec3516f481c63a78ccdb4": {
      "address": "0x2fB9dC4D0084d17BFAa2b6878b749Ac862D8Bc4a",
      "txHash": "0x12afbbc14e32c3a2eabf2c265e8ee7f36df7a78ef55921b7f537df1ae87473ad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5389_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:27"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:30"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:33"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_MOBSTERS_CITY",
            "type": "t_array(t_uint16)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:36"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:39"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:42"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:45"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)5645_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:48"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTraithashToken",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:51"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:54"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)5620",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:57"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)5708",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:59"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5585",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:61"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:64"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "cityId",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:67"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_array(t_uint16)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:70"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "totalBosses",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:73"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "totalDwarfathers",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:76"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:79"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "remainMobstersOfCity",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:82"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:85"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)5645_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)5645_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)5620": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)5708": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5585": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5389_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5d86b20df7a15c08615d971a63f85f3c251dfb1dc53ad8f75612004172c92f77": {
      "address": "0xCa75e41c48EF0ddd6570df5479939E2096121ac5",
      "txHash": "0x8e3f7101f090259a1f08d492fed54f46834465f4b4b7170b84cd4163cbb9ad90",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "Clan",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Clan.sol:14"
          },
          {
            "contract": "Clan",
            "label": "dwarfs_nft",
            "type": "t_contract(Dwarfs_NFT)5375",
            "src": "..\\project:\\contracts\\Clan.sol:37"
          },
          {
            "contract": "Clan",
            "label": "god",
            "type": "t_contract(GOD)5585",
            "src": "..\\project:\\contracts\\Clan.sol:40"
          },
          {
            "contract": "Clan",
            "label": "mapTokenInfo",
            "type": "t_mapping(t_uint32,t_struct(TokenInfo)2646_storage)",
            "src": "..\\project:\\contracts\\Clan.sol:43"
          },
          {
            "contract": "Clan",
            "label": "mapTokenExisted",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\project:\\contracts\\Clan.sol:45"
          },
          {
            "contract": "Clan",
            "label": "totalNumberOfTokens",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Clan.sol:48"
          },
          {
            "contract": "Clan",
            "label": "mapCityMobsters",
            "type": "t_mapping(t_uint8,t_array(t_uint32)dyn_storage)",
            "src": "..\\project:\\contracts\\Clan.sol:51"
          },
          {
            "contract": "Clan",
            "label": "DAILY_GOD_RATE",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Clan.sol:54"
          },
          {
            "contract": "Clan",
            "label": "TAX_PERCENT",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Clan.sol:57"
          },
          {
            "contract": "Clan",
            "label": "MAXIMUM_GLOBAL_GOD",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:60"
          },
          {
            "contract": "Clan",
            "label": "INITIAL_GOD_AMOUNT",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:63"
          },
          {
            "contract": "Clan",
            "label": "MIN_INVESTED_AMOUNT",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:66"
          },
          {
            "contract": "Clan",
            "label": "remainingGodAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:69"
          },
          {
            "contract": "Clan",
            "label": "mobsterProfitPercent",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Clan.sol:72"
          },
          {
            "contract": "Clan",
            "label": "bMerchantGamePlaying",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\Clan.sol:75"
          }
        ],
        "types": {
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(Dwarfs_NFT)5375": {
            "label": "contract Dwarfs_NFT"
          },
          "t_contract(GOD)5585": {
            "label": "contract GOD"
          },
          "t_mapping(t_uint32,t_struct(TokenInfo)2646_storage)": {
            "label": "mapping(uint32 => struct Clan.TokenInfo)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(TokenInfo)2646_storage": {
            "label": "struct Clan.TokenInfo",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint32"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "availableBalance",
                "type": "t_uint256"
              },
              {
                "label": "currentInvestedAmount",
                "type": "t_uint256"
              },
              {
                "label": "lastInvestedTime",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint8,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(uint8 => uint32[])"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c3c7bfd66fe594978c5c0a714f3152d8e6fc418bc78b29bb4c128cab0132d3b7": {
      "address": "0x0c22B083626532744419AD27e93aC2eD8E3e00C7",
      "txHash": "0x70c6360639d212c3600250920d3c3bc6f2042668fa5c79d9df367ee034ff155c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Traits",
            "label": "bossTraits",
            "type": "t_array(t_struct(DwarfTrait)5645_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "dwarfatherTraits",
            "type": "t_array(t_struct(DwarfTrait)5645_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "MAX_TRAITS",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:25"
          },
          {
            "contract": "Traits",
            "label": "dwarfs_nft",
            "type": "t_contract(IDwarfs_NFT)5659",
            "src": "..\\project:\\contracts\\Traits.sol:27"
          }
        ],
        "types": {
          "t_array(t_struct(DwarfTrait)5645_storage)dyn_storage": {
            "label": "struct ITraits.DwarfTrait[]"
          },
          "t_struct(DwarfTrait)5645_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_contract(IDwarfs_NFT)5659": {
            "label": "contract IDwarfs_NFT"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "abd3b5664762c53b96becb2dc874ed024abe024108f64b3bedb59089f13452ea": {
      "address": "0xAaE7b12403267362B1797102Ad2693C9acae9cc3",
      "txHash": "0x06b877fa43ff4c8b7ce86bc4bcd3a780ba4ed4fcc22204e862c8499fd6d42de5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)13499_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:26"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:29"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:32"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:35"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_MOBSTERS_CITY",
            "type": "t_array(t_uint16)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:38"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:41"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:44"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:47"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)13755_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:50"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTraithashToken",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:53"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:56"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)13730",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:59"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)13818",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:61"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)13695",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:63"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:66"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "cityId",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:69"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_array(t_uint16)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:72"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "totalBosses",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:75"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "totalDwarfathers",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:78"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:81"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "remainMobstersOfCity",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:84"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:87"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)13755_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)13755_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)13730": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)13818": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)13695": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)13499_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4d83c9e52ab64fb97e487b417e17943745bfcff97839473eb46be3500bc4bd6e": {
      "address": "0x3de0ACEc53665C8026EAa3774C23467399D0997d",
      "txHash": "0x5a89bdbcf6f9d3642d0d63053a6daa688038607b96d07e0251032052848e1f0b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "Clan",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Clan.sol:14"
          },
          {
            "contract": "Clan",
            "label": "dwarfs_nft",
            "type": "t_contract(Dwarfs_NFT)13485",
            "src": "..\\project:\\contracts\\Clan.sol:37"
          },
          {
            "contract": "Clan",
            "label": "god",
            "type": "t_contract(GOD)13695",
            "src": "..\\project:\\contracts\\Clan.sol:40"
          },
          {
            "contract": "Clan",
            "label": "mapTokenInfo",
            "type": "t_mapping(t_uint32,t_struct(TokenInfo)10710_storage)",
            "src": "..\\project:\\contracts\\Clan.sol:43"
          },
          {
            "contract": "Clan",
            "label": "mapTokenExisted",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\project:\\contracts\\Clan.sol:45"
          },
          {
            "contract": "Clan",
            "label": "totalNumberOfTokens",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Clan.sol:48"
          },
          {
            "contract": "Clan",
            "label": "mapCityMobsters",
            "type": "t_mapping(t_uint8,t_array(t_uint32)dyn_storage)",
            "src": "..\\project:\\contracts\\Clan.sol:51"
          },
          {
            "contract": "Clan",
            "label": "DAILY_GOD_RATE",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Clan.sol:54"
          },
          {
            "contract": "Clan",
            "label": "TAX_PERCENT",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Clan.sol:57"
          },
          {
            "contract": "Clan",
            "label": "MAXIMUM_GLOBAL_GOD",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:60"
          },
          {
            "contract": "Clan",
            "label": "INITIAL_GOD_AMOUNT",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:63"
          },
          {
            "contract": "Clan",
            "label": "MIN_INVESTED_AMOUNT",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:66"
          },
          {
            "contract": "Clan",
            "label": "remainingGodAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:69"
          },
          {
            "contract": "Clan",
            "label": "mobsterProfitPercent",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Clan.sol:72"
          },
          {
            "contract": "Clan",
            "label": "bMerchantGamePlaying",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\Clan.sol:75"
          }
        ],
        "types": {
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(Dwarfs_NFT)13485": {
            "label": "contract Dwarfs_NFT"
          },
          "t_contract(GOD)13695": {
            "label": "contract GOD"
          },
          "t_mapping(t_uint32,t_struct(TokenInfo)10710_storage)": {
            "label": "mapping(uint32 => struct Clan.TokenInfo)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(TokenInfo)10710_storage": {
            "label": "struct Clan.TokenInfo",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint32"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "availableBalance",
                "type": "t_uint256"
              },
              {
                "label": "currentInvestedAmount",
                "type": "t_uint256"
              },
              {
                "label": "lastInvestedTime",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint8,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(uint8 => uint32[])"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f172065ff8b5fc2ef2b4c2d7afe78b7bb7b8dc2c544d414aacf3ab9759e3f486": {
      "address": "0x996A1B8857374d82cEabe809B4B8Fa92Cc41aEb6",
      "txHash": "0xcb43f50bc7527f9354df32c83e5d6ab116558b931aeb5e1b9faa864eae9e6025",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "Clan",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Clan.sol:14"
          },
          {
            "contract": "Clan",
            "label": "dwarfs_nft",
            "type": "t_contract(Dwarfs_NFT)13485",
            "src": "..\\project:\\contracts\\Clan.sol:37"
          },
          {
            "contract": "Clan",
            "label": "god",
            "type": "t_contract(GOD)13695",
            "src": "..\\project:\\contracts\\Clan.sol:40"
          },
          {
            "contract": "Clan",
            "label": "mapTokenInfo",
            "type": "t_mapping(t_uint32,t_struct(TokenInfo)10710_storage)",
            "src": "..\\project:\\contracts\\Clan.sol:43"
          },
          {
            "contract": "Clan",
            "label": "mapTokenExisted",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\project:\\contracts\\Clan.sol:45"
          },
          {
            "contract": "Clan",
            "label": "totalNumberOfTokens",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Clan.sol:48"
          },
          {
            "contract": "Clan",
            "label": "mapCityMobsters",
            "type": "t_mapping(t_uint8,t_array(t_uint32)dyn_storage)",
            "src": "..\\project:\\contracts\\Clan.sol:51"
          },
          {
            "contract": "Clan",
            "label": "DAILY_GOD_RATE",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Clan.sol:54"
          },
          {
            "contract": "Clan",
            "label": "TAX_PERCENT",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Clan.sol:57"
          },
          {
            "contract": "Clan",
            "label": "MAXIMUM_GLOBAL_GOD",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:60"
          },
          {
            "contract": "Clan",
            "label": "INITIAL_GOD_AMOUNT",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:63"
          },
          {
            "contract": "Clan",
            "label": "MIN_INVESTED_AMOUNT",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:66"
          },
          {
            "contract": "Clan",
            "label": "remainingGodAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:69"
          },
          {
            "contract": "Clan",
            "label": "mobsterProfitPercent",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Clan.sol:72"
          },
          {
            "contract": "Clan",
            "label": "bMerchantGamePlaying",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\Clan.sol:75"
          }
        ],
        "types": {
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(Dwarfs_NFT)13485": {
            "label": "contract Dwarfs_NFT"
          },
          "t_contract(GOD)13695": {
            "label": "contract GOD"
          },
          "t_mapping(t_uint32,t_struct(TokenInfo)10710_storage)": {
            "label": "mapping(uint32 => struct Clan.TokenInfo)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(TokenInfo)10710_storage": {
            "label": "struct Clan.TokenInfo",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint32"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "availableBalance",
                "type": "t_uint256"
              },
              {
                "label": "currentInvestedAmount",
                "type": "t_uint256"
              },
              {
                "label": "lastInvestedTime",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint8,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(uint8 => uint32[])"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2c391e2d0ca8fb9b7ba573dfde21ef2efe5dd78aa0374747c0716400859b2a59": {
      "address": "0xEd5220c2Fc3d706B598C0Fa7466513Ad13eF4FF7",
      "txHash": "0xc5d286b0bc5d3dedbe1516f243a2d6b9f5dab6043d3131e59d1cfa219b329828",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "bossTraits",
            "type": "t_array(t_struct(DwarfTrait)7854_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "dwarfatherTraits",
            "type": "t_array(t_struct(DwarfTrait)7854_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "unallocatedTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:25"
          },
          {
            "contract": "Traits",
            "label": "allocatedTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:28"
          }
        ],
        "types": {
          "t_array(t_struct(DwarfTrait)7854_storage)dyn_storage": {
            "label": "struct ITraits.DwarfTrait[]"
          },
          "t_struct(DwarfTrait)7854_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "42ec41e0ef41682aeb378bd4007f5a5cd23badc6c51cf10f780c4763efcb601d": {
      "address": "0xb8Da710d7c1b730788F09f1362bE23132F088C05",
      "txHash": "0xbd178fb0a44d22e3e1663023e0093530c1a991bf1815f1ff9902fc65f6dc501f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5567_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_MOBSTERS_CITY",
            "type": "t_array(t_uint16)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7854_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTraithashToken",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7796",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:61"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7885",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:63"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5763",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "cityId",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_array(t_uint16)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "totalBosses",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:77"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "totalDwarfathers",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:80"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:83"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "remainMobstersOfCity",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:86"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:89"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7854_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7854_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7796": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7885": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5763": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5567_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2b179677caab5be58c7044a2f8adc39cd16d79e47de4a81aa1c54704b7500d73": {
      "address": "0x3FEf37a1D7a063Df89A6865ceabF10454835d30F",
      "txHash": "0x7bb3c4a91a4ec0992600dc0360102aa1f52508151d5d696d9e6b8ef7dc1f4c33",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "Clan",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Clan.sol:14"
          },
          {
            "contract": "Clan",
            "label": "dwarfs_nft",
            "type": "t_contract(Dwarfs_NFT)5553",
            "src": "..\\project:\\contracts\\Clan.sol:37"
          },
          {
            "contract": "Clan",
            "label": "god",
            "type": "t_contract(GOD)5763",
            "src": "..\\project:\\contracts\\Clan.sol:40"
          },
          {
            "contract": "Clan",
            "label": "mapTokenInfo",
            "type": "t_mapping(t_uint32,t_struct(TokenInfo)2646_storage)",
            "src": "..\\project:\\contracts\\Clan.sol:43"
          },
          {
            "contract": "Clan",
            "label": "mapTokenExisted",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\project:\\contracts\\Clan.sol:45"
          },
          {
            "contract": "Clan",
            "label": "totalNumberOfTokens",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Clan.sol:48"
          },
          {
            "contract": "Clan",
            "label": "mapCityMobsters",
            "type": "t_mapping(t_uint8,t_array(t_uint32)dyn_storage)",
            "src": "..\\project:\\contracts\\Clan.sol:51"
          },
          {
            "contract": "Clan",
            "label": "DAILY_GOD_RATE",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Clan.sol:54"
          },
          {
            "contract": "Clan",
            "label": "TAX_PERCENT",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Clan.sol:57"
          },
          {
            "contract": "Clan",
            "label": "MAXIMUM_GLOBAL_GOD",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:60"
          },
          {
            "contract": "Clan",
            "label": "INITIAL_GOD_AMOUNT",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:63"
          },
          {
            "contract": "Clan",
            "label": "MIN_INVESTED_AMOUNT",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:66"
          },
          {
            "contract": "Clan",
            "label": "remainingGodAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:69"
          },
          {
            "contract": "Clan",
            "label": "mobsterProfitPercent",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Clan.sol:72"
          },
          {
            "contract": "Clan",
            "label": "bMerchantGamePlaying",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\Clan.sol:75"
          }
        ],
        "types": {
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(Dwarfs_NFT)5553": {
            "label": "contract Dwarfs_NFT"
          },
          "t_contract(GOD)5763": {
            "label": "contract GOD"
          },
          "t_mapping(t_uint32,t_struct(TokenInfo)2646_storage)": {
            "label": "mapping(uint32 => struct Clan.TokenInfo)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(TokenInfo)2646_storage": {
            "label": "struct Clan.TokenInfo",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint32"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "availableBalance",
                "type": "t_uint256"
              },
              {
                "label": "currentInvestedAmount",
                "type": "t_uint256"
              },
              {
                "label": "lastInvestedTime",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint8,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(uint8 => uint32[])"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a763c2bc2c040d97a6d1a3507734f64062cd5536ee8c45e79da12d2ccf677c3b": {
      "address": "0x0ffAF6386D864231D07B2B2406d9198B70Ff1d73",
      "txHash": "0x36af028d2c00e620fba70555c79a816bfb154ed45d650656172aa95c54c9195e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "bossTraits",
            "type": "t_array(t_struct(DwarfTrait)7854_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "dwarfatherTraits",
            "type": "t_array(t_struct(DwarfTrait)7854_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "unallocatedTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:25"
          },
          {
            "contract": "Traits",
            "label": "allocatedTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:28"
          }
        ],
        "types": {
          "t_array(t_struct(DwarfTrait)7854_storage)dyn_storage": {
            "label": "struct ITraits.DwarfTrait[]"
          },
          "t_struct(DwarfTrait)7854_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "675baacfb11558c598de5c2a80128e3b51d9cdb10b7fe154373bafe7c18faac9": {
      "address": "0x8DD763cC36C3dA20a2d07d23Ba2fBD666351c29D",
      "txHash": "0xf3db5ea572442fea694f0beec2cf67409784d0e1f906aeff7bb858e6d83ba6ba",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "bossTraits",
            "type": "t_array(t_struct(DwarfTrait)7854_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "dwarfatherTraits",
            "type": "t_array(t_struct(DwarfTrait)7854_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "unallocatedTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:25"
          },
          {
            "contract": "Traits",
            "label": "allocatedTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:28"
          }
        ],
        "types": {
          "t_array(t_struct(DwarfTrait)7854_storage)dyn_storage": {
            "label": "struct ITraits.DwarfTrait[]"
          },
          "t_struct(DwarfTrait)7854_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e10556081557fdb75f05711725c34d2e11c098dfa654cfed1a8ce3da51e1bfd7": {
      "address": "0xF4197d3467b7A0e2F32E462ED0C69A7635c2A98C",
      "txHash": "0x0815b66990ee16d01519d0e3ef425b8138d10382f28cda946211d951483a120f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "bossTraits",
            "type": "t_array(t_struct(DwarfTrait)7854_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "dwarfatherTraits",
            "type": "t_array(t_struct(DwarfTrait)7854_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "unallocatedTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:25"
          },
          {
            "contract": "Traits",
            "label": "allocatedTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:28"
          }
        ],
        "types": {
          "t_array(t_struct(DwarfTrait)7854_storage)dyn_storage": {
            "label": "struct ITraits.DwarfTrait[]"
          },
          "t_struct(DwarfTrait)7854_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5d8aac869c0c7cfa3d99e55c4c257ea8b0550ddd6f83ef9dc0451fa505244b07": {
      "address": "0x251800Fbb41E52d2F8A828B31998B5eDC9C9Bc86",
      "txHash": "0xb5c4c5fb2964bc6d306dc36b505e97cc1188159996f54c3051bef8e9086eeb17",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "mobsterTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "merchantTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "MAX_MOBSTERS",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:24"
          },
          {
            "contract": "Traits",
            "label": "count_mobsters",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:26"
          },
          {
            "contract": "Traits",
            "label": "city_id",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:27"
          },
          {
            "contract": "Traits",
            "label": "count_merchants",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:28"
          }
        ],
        "types": {
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f4704974d06fb5a7c40066eefa0e58f57ecad50b95217a6cbcc0795454f9d765": {
      "address": "0xdBD15a897b9AAb802334a043C19839d6808e4aD9",
      "txHash": "0x1d061f4416a8aeca353ba92677b1ec57a35fa58e825ce4049412b222bbd47578",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5053_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7314_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7333",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5249",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7314_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7314_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7256": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7333": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5249": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5053_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "17bd261fdc6125d72edfd1d6b52fe13d3cee4f40f8ec867bbd5c6729863a9df0": {
      "address": "0xAbdedfA5ba357D76820374F8542A39A1D4e55c4f",
      "txHash": "0x42b0015affbf0ace36e93778a8ccbb0835fb59823c9ed120708d84467823888a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "Clan",
            "label": "dwarfs_nft",
            "type": "t_contract(Dwarfs_NFT)5039",
            "src": "..\\project:\\contracts\\Clan.sol:38"
          },
          {
            "contract": "Clan",
            "label": "god",
            "type": "t_contract(GOD)5249",
            "src": "..\\project:\\contracts\\Clan.sol:41"
          },
          {
            "contract": "Clan",
            "label": "mapTokenInfo",
            "type": "t_mapping(t_uint32,t_struct(TokenInfo)2641_storage)",
            "src": "..\\project:\\contracts\\Clan.sol:44"
          },
          {
            "contract": "Clan",
            "label": "mapTokenExisted",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\project:\\contracts\\Clan.sol:46"
          },
          {
            "contract": "Clan",
            "label": "totalNumberOfTokens",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Clan.sol:49"
          },
          {
            "contract": "Clan",
            "label": "mapCityMobsters",
            "type": "t_mapping(t_uint8,t_array(t_uint32)dyn_storage)",
            "src": "..\\project:\\contracts\\Clan.sol:52"
          },
          {
            "contract": "Clan",
            "label": "DAILY_GOD_RATE",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Clan.sol:55"
          },
          {
            "contract": "Clan",
            "label": "TAX_PERCENT",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Clan.sol:58"
          },
          {
            "contract": "Clan",
            "label": "MAXIMUM_GLOBAL_GOD",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:61"
          },
          {
            "contract": "Clan",
            "label": "INITIAL_GOD_AMOUNT",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:64"
          },
          {
            "contract": "Clan",
            "label": "MIN_INVESTED_AMOUNT",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:67"
          },
          {
            "contract": "Clan",
            "label": "remainingGodAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:70"
          },
          {
            "contract": "Clan",
            "label": "mobsterProfitPercent",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Clan.sol:73"
          },
          {
            "contract": "Clan",
            "label": "bMerchantGamePlaying",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\Clan.sol:76"
          }
        ],
        "types": {
          "t_contract(Dwarfs_NFT)5039": {
            "label": "contract Dwarfs_NFT"
          },
          "t_contract(GOD)5249": {
            "label": "contract GOD"
          },
          "t_mapping(t_uint32,t_struct(TokenInfo)2641_storage)": {
            "label": "mapping(uint32 => struct Clan.TokenInfo)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(TokenInfo)2641_storage": {
            "label": "struct Clan.TokenInfo",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint32"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "availableBalance",
                "type": "t_uint256"
              },
              {
                "label": "currentInvestedAmount",
                "type": "t_uint256"
              },
              {
                "label": "lastInvestedTime",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint8,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(uint8 => uint32[])"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bd6d961cc164a086773fde72bf8c77c975a9c71901b58233e13099dba1a61028": {
      "address": "0xC951BcA109a2ACf8aB42968df97048f7FD05cd5D",
      "txHash": "0x688c6a853a7d763c8774bd1100a6c7faa33e5573c8562b22d656d45fb594ce00",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "mobsterTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "merchantTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "MAX_MOBSTERS",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:24"
          },
          {
            "contract": "Traits",
            "label": "count_mobsters",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:26"
          },
          {
            "contract": "Traits",
            "label": "city_id",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:27"
          },
          {
            "contract": "Traits",
            "label": "count_merchants",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:28"
          }
        ],
        "types": {
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7f330861515086855d690a469d3c1726e061e980cb591278354b0c3aa2017efe": {
      "address": "0x39641bCf303d7849dd28650F05061aE4A0794E20",
      "txHash": "0xf654640da37de98b669ba943493c2f920a874c8668c3ebcbd0129c8f81e9a925",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "mobsterTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "merchantTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "MAX_MOBSTERS",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:24"
          },
          {
            "contract": "Traits",
            "label": "count_mobsters",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:26"
          },
          {
            "contract": "Traits",
            "label": "city_id",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:27"
          },
          {
            "contract": "Traits",
            "label": "count_merchants",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:28"
          }
        ],
        "types": {
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7d99435264aeffe4e866fe6b116ea3e2a8ab3ee2f7680c406f9aca0d2b8b290a": {
      "address": "0xCad25D699f6474A3F82dC45b765aCE20471D8d6a",
      "txHash": "0x955e0fa964056d8bd6222c9914d3dbf6e6e75ad597610b329af1c630d884469e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "mobsterTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "merchantTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "MAX_MOBSTERS",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:24"
          },
          {
            "contract": "Traits",
            "label": "count_mobsters",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:26"
          },
          {
            "contract": "Traits",
            "label": "city_id",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:27"
          },
          {
            "contract": "Traits",
            "label": "count_merchants",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:28"
          }
        ],
        "types": {
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2dd82fccd1bcf1d9943afb581a93cefe9ae4f90aa4cd37ae5cdc002775a41c9b": {
      "address": "0xE38a267d0fF370fd17999326bAD47Ab0747BE1a7",
      "txHash": "0x906cea5c6cddeb4cb2a7f88078f01b5497e61bb632a349742183886072c36afd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "mobsterTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "merchantTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "MAX_MOBSTERS",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:24"
          },
          {
            "contract": "Traits",
            "label": "count_mobsters",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:26"
          },
          {
            "contract": "Traits",
            "label": "city_id",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:27"
          },
          {
            "contract": "Traits",
            "label": "count_merchants",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:28"
          }
        ],
        "types": {
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "425da39544bc3890b610b3a4c24cdde4f70fe514aa4c459be798b485301b4779": {
      "address": "0x8A86a95d179BdCb5f25d9420b25f60F07C040651",
      "txHash": "0x3940b6b9a664fab429cbf65021203b31f1df936084ee152544020046b8451a16",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "mobsterTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "merchantTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "MAX_MOBSTERS",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:24"
          },
          {
            "contract": "Traits",
            "label": "count_mobsters",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:26"
          },
          {
            "contract": "Traits",
            "label": "city_id",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:27"
          },
          {
            "contract": "Traits",
            "label": "count_merchants",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:28"
          }
        ],
        "types": {
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3e8ad946edd00111e11a16bcdc3d5567e72638ca14eff59bc5a116ffc76e0010": {
      "address": "0xC94FEC2Cc7eEA25C90a53e3B3c294100a7b3226b",
      "txHash": "0xfa28f5be1ff2ec5a023c6c98a959abfaedc4ddac35f6304f3c0336e3271bc127",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "mobsterTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "merchantTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "MAX_MOBSTERS",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:24"
          },
          {
            "contract": "Traits",
            "label": "count_mobsters",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:26"
          },
          {
            "contract": "Traits",
            "label": "city_id",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:27"
          },
          {
            "contract": "Traits",
            "label": "count_merchants",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:28"
          }
        ],
        "types": {
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4b5b370c074b1693009657ef27c05a9f0d60f2b6967d71ba9f508e49041f554a": {
      "address": "0xc3E55E5c798dAcabA0eb598c3aa8316FDF3A31ed",
      "txHash": "0x6b7c09a9c45972aa20ade09a42e907df8dc870c5ce6e521504a9d5166f22f155",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "mobsterTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "merchantTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "MAX_MOBSTERS",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:24"
          },
          {
            "contract": "Traits",
            "label": "count_mobsters",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:26"
          },
          {
            "contract": "Traits",
            "label": "city_id",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:27"
          },
          {
            "contract": "Traits",
            "label": "count_merchants",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:28"
          }
        ],
        "types": {
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "13850bb68463a80b65051ada83cd25385abd197e3e0b54f9552bad93cb3d19b0": {
      "address": "0x47bB5ccEc06b40Cc256f327e29D3bA33ce7DFBE2",
      "txHash": "0x9286e81dccf0ade1099ec1eab4f1baf95b89b8ca4cbbd26a14bda9a109b7af5b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "mobsterTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "merchantTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "MAX_MOBSTERS",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:24"
          },
          {
            "contract": "Traits",
            "label": "count_mobsters",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:26"
          },
          {
            "contract": "Traits",
            "label": "city_id",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:27"
          },
          {
            "contract": "Traits",
            "label": "count_merchants",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:28"
          }
        ],
        "types": {
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c98cb7317a11c67223b938051a258d5bc234603e09f8561fce3f24863c02f433": {
      "address": "0x95e3888CB178447F8f1cF030e6c39aF95d6BAE85",
      "txHash": "0x503a6e85a7a5e6e5fdca52b8347053580b1dcbd31281dc14aebfe6f3fcaf084a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5059_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7320_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7262",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7339",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5255",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7320_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7320_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7262": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7339": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5255": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5059_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cf6eb814659348e5981d51d85d84286bbfb7a495bb11af9f54ee03fcfd9bae3f": {
      "address": "0x18aA557ce374A2862A2f0C2a4A3bfB2193FF333D",
      "txHash": "0x83c5e78430b86265a636572449d38a380356fdb9b248250f58400abec417b491",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5059_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7320_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7262",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7339",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5255",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7320_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7320_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7262": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7339": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5255": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5059_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e54970bd851b136c56f2d636e1b79f3f491b5cb74840616f11662522a1b41d2a": {
      "address": "0x10FAB7d2c91A8F253FEB7F4334Ed8C0e44e83B6c",
      "txHash": "0x04e530eea41d87ab555f618f9dfba7caa97b992b067c3d75f4a363e42cd7f29e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5057_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7318_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7260",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7337",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5253",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7318_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7318_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7260": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7337": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5253": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5057_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "22a4bdf37594ec659871eaa395954be68df82742f09a4db3d298eaac03a259a9": {
      "address": "0xd8a172df93b43f4D6286c78649423Fdfe50ed0c7",
      "txHash": "0x092916150f6f201f470ef73f53d5b8fb833548fce1a01119310b3879ac55728c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5057_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7318_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7260",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7337",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5253",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7318_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7318_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7260": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7337": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5253": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5057_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "af48c2f168e38668cc906ddcbb6163dcb584e526fffb84b58a6fdfca5c9d1c07": {
      "address": "0x76977aAD45d5F9556E8237957A5210b69db79cF9",
      "txHash": "0x3422f04f9d1853ceed9e10e965894a5c971a7676e75a5e42a7333afff551214a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5057_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7318_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7260",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7337",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5253",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7318_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7318_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7260": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7337": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5253": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5057_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "88716a2fd28b232873eb8389a4e11849982d4add9761743c9e5708072225df77": {
      "address": "0x34f2149e07aDe397452b94a8837F008e4be0e267",
      "txHash": "0xe35f3e9e2bbb750615f11700fcd6640ebc530fe5bec1456b17087770fd700bea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5057_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7318_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7260",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7337",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5253",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7318_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7318_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7260": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7337": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5253": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5057_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c7fda505ea54232fafd9d19a89920c532a832266a1b4f16006b9f5c52f6c9d31": {
      "address": "0xa0C8D26c76533835B8029d44A45937Ad5aaA88F5",
      "txHash": "0x555e1d6a230b406bc14813ef1ba12390378a559aae1f0e8edcf60b49e852eb5d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5063_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7324_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7266",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7343",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5259",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7324_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7324_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7266": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7343": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5259": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5063_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "823f7c1b555279d012be80e282f91eaf6493cbd4c3c776b73e3dfdcd4183226b": {
      "address": "0xC685010D79702E5B7e4cD1cB617FE02dF7EB4932",
      "txHash": "0x30e4be89dd8bb7ea25ab3d6477e98844d4df6b21fec171ed712e52c62011fe0d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5063_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7324_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7266",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7343",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5259",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7324_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7324_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7266": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7343": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5259": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5063_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "424a3fffd82bd3bdc79e05bf3f5683490b4de948c6da9bdd431d336b6d2f62d8": {
      "address": "0xd6DD9c32894C6c40E4e942aB7Dd4AA6a1330F290",
      "txHash": "0xb8fed10fb9fedf06779ee2ab9bf2c7dfb4aea87a5eac14161e11c34f8be93398",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5065_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7326_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7268",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7345",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5261",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7326_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7326_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7268": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7345": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5261": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5065_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3b4a82537f96ce125c56a2686bfcd89c51b35d612f3161d786f3451eaab5ac95": {
      "address": "0x8586864D603fe476B1cb2877Ff4B48Be64415C3A",
      "txHash": "0x2bb14efcd85d03a673ca267a1c139013a8a8b8d58fdd59a3336f14475bcffe28",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5065_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7326_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7268",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7345",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5261",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7326_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7326_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7268": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7345": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5261": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5065_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "06e2c4438c7f813c6a4a55e8f7fd7f5d275abc6f12e247b640116f44723e0a87": {
      "address": "0x11c3ec5BCA32C51A4B4e616B02B1ED4A14b93af1",
      "txHash": "0x0ce4462aaacf3585d5f4b5aa5ca53868a6f7c61fd08ed745cf8fa7cd57a58db8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5044_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7305_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7247",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7324",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5240",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7305_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7305_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7247": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7324": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5240": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5044_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4106a539e0082f1968c0581fa5ee9ebf7c553905b7809acee9b40c41cdb2bad1": {
      "address": "0x2b647bA9fCF19E31a22D2757eCC6A0F026bE94aB",
      "txHash": "0x2f831be97dea2909555cdc0a77f5e0c88529115804d2f94973c6bcf4bcd93e83",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5073_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7334_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7276",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7353",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5269",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7334_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7334_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7276": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7353": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5269": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5073_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bb11ffcd22d29a2fe7c92add3307e618fe2d8d83e4563696164c263e528f5d9f": {
      "address": "0x22EE792C68bA48214E6e5BDe4486D93A47DCf412",
      "txHash": "0x5932c60bb5f4acbd72aa861533c24106bfef5813fd1a198382d9c843bb2a78fa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5073_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7334_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7276",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7353",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5269",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7334_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7334_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7276": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7353": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5269": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5073_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "173a8406c0022e6cbfb5e47344075c401665d2760e67674ebe5dc3cdf7838178": {
      "address": "0x484Eb73308aad3bD1d7b7dC9141A72f9f16cE6cc",
      "txHash": "0x4abe6deb07150de24211d914283f449a6627d9339236ed1b7174be0a900be4d2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5088_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7349_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7291",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7368",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5284",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7349_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7349_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7291": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7368": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5284": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5088_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d7c4896e545df34b89e18e54c275ffa4c481385c52b636d5a5734bc1546d2df8": {
      "address": "0xb8e5662Bd6D4c8A812d382360ea51381d7987ED5",
      "txHash": "0x726f6a999ed3879c87a6e4e66d055af6abce3662e43d2df6a7c8ab2dc22ff6fd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5094_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7355_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7297",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7374",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5290",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7355_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7355_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7297": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7374": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5290": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5094_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0dd0920ae3c95e4de5556ae507c7e44fd6f8324796523e0c723da7c5f9220374": {
      "address": "0x9787aF3155B3B6424F212a55fdDC8266A6Dc0F1B",
      "txHash": "0xde58861c1313ca9a9a750f95a3bcc9b95b06ef1ff458f343d9b6ff3df61775ac",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5084_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7345_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7287",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7364",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5280",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7345_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7345_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7287": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7364": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5280": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5084_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5796e31138e424c2b6a68b17dacdb29f1c8c4bceec6753983d899a0e94bcc971": {
      "address": "0x0Fedd55D6280Aa27293a01EAde31BCa876Ea642C",
      "txHash": "0xc29695195bca6ef76fc447ea06f2a07896de2acf47e0b6f9d63138b76e2bd616",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5082_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7343_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7285",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7362",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5278",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7343_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7343_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7285": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7362": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5278": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5082_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2bd6a546d500a8f72600a4352ce462cd1902467bc7e79124e08f79d861b5993b": {
      "address": "0x1a3416481CE7D5f2A1600Ba339Be489aeED54029",
      "txHash": "0x7de0d22e0054f39e2b13404e84cabd06c86c5d6e1c6f2f0240771cf6f1b9ce74",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5071_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7332_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7274",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7351",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5267",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7332_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7332_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7274": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7351": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5267": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5071_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0ce8ba9382c6722261cb6139aa77acb1b2f88d92ff73a8477be048d36f9195c7": {
      "address": "0xe21d339AeA8F380c7E9ea814eFb7bA40FD51d46C",
      "txHash": "0xc31f84692e176f7a31de20586000b727e3728d5bcc3fac2aaba0f138120feb72",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5066_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7327_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7269",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7346",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5262",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7327_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7327_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7269": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7346": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5262": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5066_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "faa371514c0afbb24cd083539d503da898d7819f9b4c51e511644643af06f380": {
      "address": "0xc4F429fCebC0CE699f978a0a5a8063f310743C1A",
      "txHash": "0x1d02e7c0846e9b323cc6d70264546f14e0b2c61028dc8fef353d149861195067",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "mobsterTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "merchantTraits",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "MAX_MOBSTERS",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:24"
          },
          {
            "contract": "Traits",
            "label": "count_mobsters",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:26"
          },
          {
            "contract": "Traits",
            "label": "city_id",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:27"
          },
          {
            "contract": "Traits",
            "label": "count_merchants",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:28"
          }
        ],
        "types": {
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7798839dc6fe2df1c6561db921e2b019276b957dbfa574ca0859e1f2851bc5a7": {
      "address": "0x49cCc7584426B4B31b7e354a8DF13A00F01edcE2",
      "txHash": "0xb4de5826f83f5d18f09e432214d14ce3c00dacb1d834e733c19bff1384db313f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5066_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7327_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7269",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7346",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5262",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7327_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7327_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7269": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7346": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5262": {
            "label": "contract GOD"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5066_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b84c7940c52ff64cdd3474c656ecaea63ca54e518e9d1e8e2511edb888d4a8ac": {
      "address": "0x781CB03a6c0bfe68dED0f07aAC466B3a243961A4",
      "txHash": "0x03813f02e63ccdfaeb98cc644760b600f82c952e59143ad6fd81289b916b15bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "Clan",
            "label": "dwarfs_nft",
            "type": "t_contract(Dwarfs_NFT)5052",
            "src": "..\\project:\\contracts\\Clan.sol:36"
          },
          {
            "contract": "Clan",
            "label": "god",
            "type": "t_contract(GOD)5262",
            "src": "..\\project:\\contracts\\Clan.sol:39"
          },
          {
            "contract": "Clan",
            "label": "mapTokenInfo",
            "type": "t_mapping(t_uint32,t_struct(TokenInfo)2640_storage)",
            "src": "..\\project:\\contracts\\Clan.sol:42"
          },
          {
            "contract": "Clan",
            "label": "mapTokenExisted",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\project:\\contracts\\Clan.sol:44"
          },
          {
            "contract": "Clan",
            "label": "totalNumberOfTokens",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Clan.sol:47"
          },
          {
            "contract": "Clan",
            "label": "mapCityMobsters",
            "type": "t_mapping(t_uint8,t_array(t_uint32)dyn_storage)",
            "src": "..\\project:\\contracts\\Clan.sol:50"
          },
          {
            "contract": "Clan",
            "label": "DAILY_GOD_RATE",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Clan.sol:53"
          },
          {
            "contract": "Clan",
            "label": "TAX_PERCENT",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Clan.sol:56"
          },
          {
            "contract": "Clan",
            "label": "MAXIMUM_GLOBAL_GOD",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:59"
          },
          {
            "contract": "Clan",
            "label": "INITIAL_GOD_AMOUNT",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:62"
          },
          {
            "contract": "Clan",
            "label": "MIN_INVESTED_AMOUNT",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:65"
          },
          {
            "contract": "Clan",
            "label": "remainingGodAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:68"
          },
          {
            "contract": "Clan",
            "label": "mobsterProfitPercent",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Clan.sol:71"
          },
          {
            "contract": "Clan",
            "label": "bMerchantGamePlaying",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\Clan.sol:74"
          }
        ],
        "types": {
          "t_contract(Dwarfs_NFT)5052": {
            "label": "contract Dwarfs_NFT"
          },
          "t_contract(GOD)5262": {
            "label": "contract GOD"
          },
          "t_mapping(t_uint32,t_struct(TokenInfo)2640_storage)": {
            "label": "mapping(uint32 => struct Clan.TokenInfo)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(TokenInfo)2640_storage": {
            "label": "struct Clan.TokenInfo",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint32"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "availableBalance",
                "type": "t_uint256"
              },
              {
                "label": "currentInvestedAmount",
                "type": "t_uint256"
              },
              {
                "label": "lastInvestedTime",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint8,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(uint8 => uint32[])"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "628aeda80dc3905c8448840812789060b429115abc57c22f38935e6186dc9642": {
      "address": "0xda14DC37566E65d4d241a65B117B9424Bd08aD7d",
      "txHash": "0x6ab51fb9827ddbd18f43516ede99560f08aea16c2fa5f7ae46a015dc6232ffa7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5090_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:28"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:31"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:34"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:37"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:40"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:43"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:46"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:49"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7346_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:52"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:55"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7293",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7365",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:60"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5286",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:62"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:65"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:68"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:71"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7346_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7346_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "background_weapon",
                "type": "t_uint16"
              },
              {
                "label": "body_outfit",
                "type": "t_uint16"
              },
              {
                "label": "head_ears",
                "type": "t_uint16"
              },
              {
                "label": "mouth_nose",
                "type": "t_uint16"
              },
              {
                "label": "eyes_brows",
                "type": "t_uint16"
              },
              {
                "label": "hair_facialhair",
                "type": "t_uint16"
              },
              {
                "label": "eyewear",
                "type": "t_uint8"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7293": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7365": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5286": {
            "label": "contract GOD"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5090_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "406b0e5ee9fcd0c8fb42c4461c1b54d74562760af72333edfd3fd6421702d8c2": {
      "address": "0x3b87334c7a10815Aaf00676ab0DF5f917a583eB2",
      "txHash": "0xf52729391df03b7818e60c34c064c1426a462cfc1c1d7ff6736acc7d739cdea3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "mapMobsterIndexExisted",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\project:\\contracts\\Traits.sol:16"
          },
          {
            "contract": "Traits",
            "label": "mapMerchantIndexExisted",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\project:\\contracts\\Traits.sol:17"
          },
          {
            "contract": "Traits",
            "label": "merchantStartIndex",
            "type": "t_array(t_uint32)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "merchantGenLimit",
            "type": "t_array(t_uint32)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:20"
          },
          {
            "contract": "Traits",
            "label": "MAX_MOBSTERS",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "count_mobsters",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:24"
          },
          {
            "contract": "Traits",
            "label": "city_id",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Traits.sol:25"
          },
          {
            "contract": "Traits",
            "label": "count_merchants",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:26"
          }
        ],
        "types": {
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fd68bcb3f0f3dc879ace236a7f6d113b70508a88e0955781eb541df868087623": {
      "address": "0xA4DF5479f65AEdC6532fdeA77Fa927afdb87F6e7",
      "txHash": "0x5b456a726ead0a69095788ef632f18fbfdd59d417a9f6fd1b66fe8ba9e8004ad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC2981ContractWideRoyalties",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)5090_storage",
            "src": "..\\project:\\contracts\\ERC2981ContractWideRoyalties.sol:9"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_ETH_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:24"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MINT_GOD_PRICES",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:27"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_GEN_TOKENS",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:30"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_TOKENS_ETH_SOLD",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:33"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_CASINO_MINTS",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:36"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "CASINO_PRICE",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:39"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "MAX_NUM_CITY",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:42"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "minted",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:45"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapTokenTraits",
            "type": "t_mapping(t_uint32,t_struct(DwarfTrait)7344_storage)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:48"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "mapCasinoplayerTime",
            "type": "t_mapping(t_address,t_uint80)",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:51"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "clan",
            "type": "t_contract(IClan)7293",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:54"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "nft_traits",
            "type": "t_contract(ITraits)7357",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:56"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "god",
            "type": "t_contract(GOD)5286",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:58"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "baseURI",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:61"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_mobsters",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:64"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "count_casinoMints",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:67"
          },
          {
            "contract": "Dwarfs_NFT",
            "label": "generationOfNft",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Dwarfs_NFT.sol:70"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_struct(DwarfTrait)7344_storage)": {
            "label": "mapping(uint32 => struct ITraits.DwarfTrait)"
          },
          "t_struct(DwarfTrait)7344_storage": {
            "label": "struct ITraits.DwarfTrait",
            "members": [
              {
                "label": "isMerchant",
                "type": "t_bool"
              },
              {
                "label": "index",
                "type": "t_uint32"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "generation",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint80)": {
            "label": "mapping(address => uint80)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_contract(IClan)7293": {
            "label": "contract IClan"
          },
          "t_contract(ITraits)7357": {
            "label": "contract ITraits"
          },
          "t_contract(GOD)5286": {
            "label": "contract GOD"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(RoyaltyInfo)5090_storage": {
            "label": "struct ERC2981Base.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b2875aaf8c7d8727e44b788155577883e0ac81dce15ccb946102037b7a08b171": {
      "address": "0x062Cdb8d0161fEE2f62B639CAe1e58d5ec4c3124",
      "txHash": "0xb163ffa7d08fdcdc282279675877f55af68ae51b1085d7905b2a22fbc7e4258c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "Clan",
            "label": "dwarfs_nft",
            "type": "t_contract(Dwarfs_NFT)5076",
            "src": "..\\project:\\contracts\\Clan.sol:36"
          },
          {
            "contract": "Clan",
            "label": "god",
            "type": "t_contract(GOD)5286",
            "src": "..\\project:\\contracts\\Clan.sol:39"
          },
          {
            "contract": "Clan",
            "label": "mapTokenInfo",
            "type": "t_mapping(t_uint32,t_struct(TokenInfo)2640_storage)",
            "src": "..\\project:\\contracts\\Clan.sol:42"
          },
          {
            "contract": "Clan",
            "label": "mapTokenExisted",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\project:\\contracts\\Clan.sol:44"
          },
          {
            "contract": "Clan",
            "label": "totalNumberOfTokens",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Clan.sol:47"
          },
          {
            "contract": "Clan",
            "label": "mapCityMobsters",
            "type": "t_mapping(t_uint8,t_array(t_uint32)dyn_storage)",
            "src": "..\\project:\\contracts\\Clan.sol:50"
          },
          {
            "contract": "Clan",
            "label": "DAILY_GOD_RATE",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Clan.sol:53"
          },
          {
            "contract": "Clan",
            "label": "TAX_PERCENT",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Clan.sol:56"
          },
          {
            "contract": "Clan",
            "label": "MAXIMUM_GLOBAL_GOD",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:59"
          },
          {
            "contract": "Clan",
            "label": "INITIAL_GOD_AMOUNT",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:62"
          },
          {
            "contract": "Clan",
            "label": "MIN_INVESTED_AMOUNT",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:65"
          },
          {
            "contract": "Clan",
            "label": "remainingGodAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Clan.sol:68"
          },
          {
            "contract": "Clan",
            "label": "mobsterProfitPercent",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\Clan.sol:71"
          },
          {
            "contract": "Clan",
            "label": "bMerchantGamePlaying",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\Clan.sol:74"
          }
        ],
        "types": {
          "t_contract(Dwarfs_NFT)5076": {
            "label": "contract Dwarfs_NFT"
          },
          "t_contract(GOD)5286": {
            "label": "contract GOD"
          },
          "t_mapping(t_uint32,t_struct(TokenInfo)2640_storage)": {
            "label": "mapping(uint32 => struct Clan.TokenInfo)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(TokenInfo)2640_storage": {
            "label": "struct Clan.TokenInfo",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint32"
              },
              {
                "label": "cityId",
                "type": "t_uint8"
              },
              {
                "label": "availableBalance",
                "type": "t_uint256"
              },
              {
                "label": "currentInvestedAmount",
                "type": "t_uint256"
              },
              {
                "label": "lastInvestedTime",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint8,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(uint8 => uint32[])"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5250a3468e872661554cc69e53441f2f60d71a2596796f54b483cd6f1314be5f": {
      "address": "0x76cB6882631ED2721ED3538DE27aee7cfca4ED1E",
      "txHash": "0xdae09861a5425e6062699ab3041f86023c409dc8153ec99977cdbc2bc40c6790",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "MobsterLevelList",
            "label": "mobster_level_list",
            "type": "t_bytes_storage",
            "src": "..\\project:\\contracts\\Mobster_Level_List.sol:13"
          }
        ],
        "types": {
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1faf874390e425784d6faa057f1ac53d2cd3da6a947001a06e6466817e4093b0": {
      "address": "0xb59623C2df6B87f676142A2d907BcD20A7db5BB8",
      "txHash": "0xb5e9e667b0640b3ad5dead5d68cf4d109bff1e4b1e721b2d9c25fd3620dcc1b4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "MobsterLevelList",
            "label": "mobster_level_list",
            "type": "t_bytes_storage",
            "src": "..\\project:\\contracts\\Mobster_Level_List.sol:13"
          }
        ],
        "types": {
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "61375aae71aa272eab0ea6f104ad36f13302224102e38cad42df28d18b9bf849": {
      "address": "0x773738bb9b622b993f1DB7e6D3a8e6B9bf44B46f",
      "txHash": "0x7e6b5c1fe9cde34be4b7a50c193ab918f709e342dc3e361d4c77f2ea6b844258",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "MobsterLevelList",
            "label": "mobster_level_list",
            "type": "t_bytes_storage",
            "src": "..\\project:\\contracts\\MobsterLevelList.sol:13"
          }
        ],
        "types": {
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a0d440af3a55e4e0e1099134975e38fd406211a6145375ac39f5ae54ae0bda35": {
      "address": "0x23CC07D70D74dc227498b1Be11b4666d7B2c326C",
      "txHash": "0xd06b7a729620e15be9fd08ef4bb7982d1eff4e1dca170917f5b8217127728172",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "mapMobsterIndexExisted",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\project:\\contracts\\Traits.sol:16"
          },
          {
            "contract": "Traits",
            "label": "mapMerchantIndexExisted",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\project:\\contracts\\Traits.sol:17"
          },
          {
            "contract": "Traits",
            "label": "merchantStartIndex",
            "type": "t_array(t_uint32)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "merchantGenLimit",
            "type": "t_array(t_uint32)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:20"
          },
          {
            "contract": "Traits",
            "label": "MAX_MOBSTERS",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "count_mobsters",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:24"
          },
          {
            "contract": "Traits",
            "label": "city_id",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Traits.sol:25"
          },
          {
            "contract": "Traits",
            "label": "count_merchants",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:26"
          },
          {
            "contract": "Traits",
            "label": "mobsterLevelList",
            "type": "t_contract(IMobsterLevelList)7331",
            "src": "..\\project:\\contracts\\Traits.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IMobsterLevelList)7331": {
            "label": "contract IMobsterLevelList"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bdc5d969a88d8b4492aae90728feb820d31785eb991f588e51549879b693c7c9": {
      "address": "0xf3C1576d5Ad4A700e75EBB8171cC52e16D132816",
      "txHash": "0xa0db8352b22e85286a19e21cb1141faaaccf5b5ac1f1a045c0e36d21b8a7a420",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "MobsterLevelList",
            "label": "mobster_level_list",
            "type": "t_bytes_storage",
            "src": "..\\project:\\contracts\\MobsterLevelList.sol:13"
          }
        ],
        "types": {
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ae752600db9118939c519e7ba23e854765de56ac4e59e406b7a1b418384e1166": {
      "address": "0xa55Ae0E0E0060bE93F458df4f689BEBD861e5cA8",
      "txHash": "0x3072bed0a3fef33c3b5b3acaf1dd479fba27589847c4acf3cdfdfe2a356997e5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "MobsterLevelList",
            "label": "mobster_level_list",
            "type": "t_bytes_storage",
            "src": "..\\project:\\contracts\\MobsterLevelList.sol:13"
          }
        ],
        "types": {
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "49c15a703b08892eb118b47b61fdcc7d12247c1c3d7b336e61599b595087162e": {
      "address": "0x9427BB07B5B0AB9134b2dee323fA255f6ab14ed0",
      "txHash": "0x989199853067a63fd927d54a4b5a6512893336cf040b1d9080534f676b439480",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "MobsterLevelList",
            "label": "mobster_level_list",
            "type": "t_bytes_storage",
            "src": "..\\project:\\contracts\\MobsterLevelList.sol:13"
          }
        ],
        "types": {
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f18578f09556bac334c490b586554800e48815f5813ce6395121de196fc4b3d3": {
      "address": "0x184C63912e58df464FCF0102FFf2fdFcB85E853F",
      "txHash": "0x1070a561a75a8e835b4b0aec1828d407fc679fa0b8ba360a1e56ee442b85161c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "MobsterLevelList",
            "label": "mobster_level_list",
            "type": "t_bytes_storage",
            "src": "..\\project:\\contracts\\MobsterLevelList.sol:13"
          }
        ],
        "types": {
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "396ea4c6244068f04103a2a4edba82593cb5a8e1f17dc05c53a737ad060935b9": {
      "address": "0x4074319E6c22a2175eEc4c57Db878a0f4544a705",
      "txHash": "0xe21778b8ffdc67e1c201ee4bd1dbce68da958982a34766a58551d1c093091261",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "mapMobsterIndexExisted",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\project:\\contracts\\Traits.sol:16"
          },
          {
            "contract": "Traits",
            "label": "mapMerchantIndexExisted",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\project:\\contracts\\Traits.sol:17"
          },
          {
            "contract": "Traits",
            "label": "merchantStartIndex",
            "type": "t_array(t_uint32)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "merchantGenLimit",
            "type": "t_array(t_uint32)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:20"
          },
          {
            "contract": "Traits",
            "label": "MAX_MOBSTERS",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "count_mobsters",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:24"
          },
          {
            "contract": "Traits",
            "label": "city_id",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Traits.sol:25"
          },
          {
            "contract": "Traits",
            "label": "count_merchants",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:26"
          },
          {
            "contract": "Traits",
            "label": "mobsterLevelList",
            "type": "t_contract(IMobsterLevelList)7331",
            "src": "..\\project:\\contracts\\Traits.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IMobsterLevelList)7331": {
            "label": "contract IMobsterLevelList"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0f7248f5b23eec816cab355e32b1749da70fb82b3783237159d839cb7b8119a0": {
      "address": "0xa92e6dFaB0612f5a4C697Afef0Ca87443cB43C58",
      "txHash": "0x739bb473055c8fa19b96a458758f1ef284ecccb1f6977d0816a37a42460d6f61",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "mapMobsterIndexExisted",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\project:\\contracts\\Traits.sol:16"
          },
          {
            "contract": "Traits",
            "label": "mapMerchantIndexExisted",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\project:\\contracts\\Traits.sol:17"
          },
          {
            "contract": "Traits",
            "label": "merchantStartIndex",
            "type": "t_array(t_uint32)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "merchantGenLimit",
            "type": "t_array(t_uint32)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:20"
          },
          {
            "contract": "Traits",
            "label": "MAX_MOBSTERS",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "count_mobsters",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:24"
          },
          {
            "contract": "Traits",
            "label": "city_id",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Traits.sol:25"
          },
          {
            "contract": "Traits",
            "label": "count_merchants",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:26"
          },
          {
            "contract": "Traits",
            "label": "mobsterLevelList",
            "type": "t_contract(IMobsterLevelList)7331",
            "src": "..\\project:\\contracts\\Traits.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IMobsterLevelList)7331": {
            "label": "contract IMobsterLevelList"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7ff86d21845eaebffeb16fe77b328bbb16d2dc279c6381543fafc84ce1c971f5": {
      "address": "0xBEcf4441F2c96823dBF1F7fa7309C3a06d69ed31",
      "txHash": "0x2e34f2ee1522447eef9c6853eba927f477bf71a01fbeb0ef02d22dce657c9dce",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "mapMobsterIndexExisted",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\project:\\contracts\\Traits.sol:16"
          },
          {
            "contract": "Traits",
            "label": "mapMerchantIndexExisted",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\project:\\contracts\\Traits.sol:17"
          },
          {
            "contract": "Traits",
            "label": "merchantStartIndex",
            "type": "t_array(t_uint32)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:19"
          },
          {
            "contract": "Traits",
            "label": "merchantGenLimit",
            "type": "t_array(t_uint32)dyn_storage",
            "src": "..\\project:\\contracts\\Traits.sol:20"
          },
          {
            "contract": "Traits",
            "label": "MAX_MOBSTERS",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "count_mobsters",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:24"
          },
          {
            "contract": "Traits",
            "label": "city_id",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Traits.sol:25"
          },
          {
            "contract": "Traits",
            "label": "count_merchants",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:26"
          },
          {
            "contract": "Traits",
            "label": "mobsterLevelList",
            "type": "t_contract(IMobsterLevelList)7331",
            "src": "..\\project:\\contracts\\Traits.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IMobsterLevelList)7331": {
            "label": "contract IMobsterLevelList"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ffe86b640bd96b7a8b25312cc48bc89bf63486c5c0828b7d5fd00e7bbe79a367": {
      "address": "0x0A84e70CBc08c2bEE1163A4C05a5C87d9C70Fec3",
      "txHash": "0xb042a076216d2068e254a232b84823860de4237a8a68ef78ce6cb4d9da8ca79b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@nomiclabs\\buidler\\console.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@nomiclabs\\buidler\\console.sol:102"
          },
          {
            "contract": "Traits",
            "label": "mapMobsterIndexExisted",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\project:\\contracts\\Traits.sol:16"
          },
          {
            "contract": "Traits",
            "label": "merchantStartIndex",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:18"
          },
          {
            "contract": "Traits",
            "label": "MAX_MOBSTERS",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:20"
          },
          {
            "contract": "Traits",
            "label": "count_mobsters",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "city_id",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Traits.sol:23"
          },
          {
            "contract": "Traits",
            "label": "count_merchants",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\Traits.sol:24"
          },
          {
            "contract": "Traits",
            "label": "mobsterLevelList",
            "type": "t_contract(IMobsterLevelList)7331",
            "src": "..\\project:\\contracts\\Traits.sol:26"
          },
          {
            "contract": "Traits",
            "label": "dwarfs_nft",
            "type": "t_contract(Dwarfs_NFT)5076",
            "src": "..\\project:\\contracts\\Traits.sol:29"
          }
        ],
        "types": {
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IMobsterLevelList)7331": {
            "label": "contract IMobsterLevelList"
          },
          "t_contract(Dwarfs_NFT)5076": {
            "label": "contract Dwarfs_NFT"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
